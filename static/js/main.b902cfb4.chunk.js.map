{"version":3,"sources":["components/KakaoMap/MapLoader.tsx","components/KakaoMap/index.tsx","components/HorizontalContainer.tsx","components/Dot.tsx","components/Aside.tsx","providers/StatusProvider.tsx","components/IconButton.tsx","pages/Map/Controls/ViewerButtons.tsx","helpers/colors.ts","pages/Map/Viewer.tsx","helpers/stringFormat.ts","components/Point.tsx","pages/Map/Controls/EditorButtons.tsx","helpers/unionSet.ts","pages/Map/Editor.tsx","helpers/fileInteracts.ts","providers/ControlProvider.tsx","pages/Map/index.tsx","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dimmer","styled","div","_templateObject","_taggedTemplateLiteral","MapLoader","props","_useInjectKakaoMapApi","useInjectKakaoMapApi","appkey","process","libraries","retries","loading","error","React","createElement","Fragment","Map","ContainerStyled","_ref","position","css","_templateObject2","_templateObject3","ContentStyled","_templateObject4","_ref2","gap","concat","Divider","MUIDivider","orientation","HorizontalContainer","_ref3","_ref3$gap","_ref3$style","style","children","paddleAnimation","keyframes","Circle","color","size","animate","Container","Dot","_ref3$color","_ref3$size","className","ContainerWrapper","fold","FoldButtonContainerStyled","FoldButtonStyled","_templateObject5","ref","_useState","useState","_useState2","_slicedToArray","setFold","ArrowIcon","useCallback","sx","width","fontSize","KeyboardDoubleArrowRightIcon","KeyboardDoubleArrowLeftIcon","onClick","evt","prev","Aside","forwardRef","initialState","currentTime","logs","Context","createContext","undefined","StatusProvider","state","setState","Provider","value","_objectSpread","IconButton","_ref$tooltip","tooltip","_ref$tooltipColor","tooltipColor","_ref$tooltipPlacement","tooltipPlacement","_ref$tooltipSize","tooltipSize","active","_ref$disabled","disabled","_ref$loading","_ref$variant","variant","MuiTooltip","arrow","title","placement","MuiIconButton","--IconButton-size","CircularProgress","MenuButton","_ref$active","icon","PlaySpeedButton","speed","onSelectSpeed","_React$useState","_React$useState2","anchorEl","setAnchorEl","isOpen","Boolean","close","Item","item","MenuItem","Object","assign","selected","select","toFixed","event","currentTarget","SlowMotionVideoIcon","Menu","open","onClose","SliderWrapperStyled","ViewerButtons","running","runable","progressMax","progressCurrent","onProgressUpdated","onClickPlay","onClickUpload","PlayControlButton","PauseIcon","PlayArrowIcon","UploadButton","useRef","htmlFor","display","id","name","type","accept","onChange","UploadIcon","current","click","Slider","aria-label","defaultValue","min","max","step","valueLabelDisplay","console","log","marginLeft","randomDarkColor","rgb","Math","random","map","round","filter","c","length","toString","padStart","join","MarkerType","LogIcon","backgroundColor","justifyItems","alignItems","height","borderRadius","VehicleLogInfoStyled","RoadLineStyled","Icon","_ref2$style","iconStyle","fill","marginTop","LocalTaxiIcon","HailIcon","KeyboardDoubleArrowDownIcon","LogInfoStyled","get_slope_weight","x1","y1","x2","y2","cx","cy","lx","abs","ly","dx","dy","r","sqrt","Viewer","markerPositions","setMarkerPositions","_useStatusState","ctx","useContext","Error","useStatusState","_useStatusState2","status","setStatus","_useState3","_useState4","level","setLevel","_useState5","_useState6","setRunable","_useState7","_useState8","setRunning","_useState9","_useState10","setSpeed","_useState11","_useState12","setProgressMax","_useState13","_useState14","setProgressCurrent","_useState15","_useState16","allColors","setColors","_useState17","_useState18","setLogs","useEffect","useMap","getLevel","displayTimeAt","t","_logs$t","vehicles","time","tasks","vMarkers","Array","from","_ref4","lat","lng","key","tMarkers","_ref5","pick_lat","pick_lng","drop_lat","drop_lng","flat","_toConsumableArray","interval","DEFAULT_TIMESTEP","timer","setTimeout","clearTimeout","fitMapBound","nodes","bounds","kakao","maps","LatLngBounds","forEach","_ref6","extend","LatLng","setBounds","positions","_ref7","_vehicles$map","_ref8","apply","_ref9","nameKeyValueMap","Set","_ref10","_ref11","_ref12","_defineProperty","reduce","previousValue","currentValue","focusTo","_ref14","panTo","LogInfo","_ref15","colors","_ref16","allocated_id","sort","a","b","next","_ref17","task","_ref18","_ref19","isPicked","isDroped","IconReadyStyle","borderWidth","borderColor","borderStyle","IconNotReadyStyle","IconReadyInnerStyle","justifySelf","cursor","margin","top","left","transition","zIndex","_useState19","_useState20","subLogs","setSubLogs","sliced","slice","StateViewer","Typography","translate","textAlign","latestLog","Stack","spacing","marginBottom","date","options","timeZone","dateString","Intl","DateTimeFormat","dateStyle","format","dayPeriod","_timeFormat$split$1$s","hour","minute","second","hour12","split","_timeFormat$split$1$s2","humanizeDate","Date","_ref20","CustomOverlayMap","cc","parentElement","files","target","file","reader","FileReader","addEventListener","result","JSON","parse","_unused","window","alert","readAsText","_ref$color","Point","_ref4$size","_ref4$selected","onMouseEnter","onMouseDown","onMouseLeave","onMouseUp","data-id","EditorButtons","editMode","onModeChanged","onClickDownload","onSelectMode","mode","ModeButtons","GrainIcon","PolylineIcon","OpenWithIcon","DownloadButton","DownloadIcon","UnionSet","_classCallCheck","this","parentIdx","_createClass","parent","get","president","find","set","ga","gb","keys","saveGraphFile","edges","json","keyToIndex","indexOf","transformed","info","to","filename","blob","document","download","href","URL","createObjectURL","dataset","downloadurl","e","revokeObjectURL","saveFile","toISOString","Blob","stringify","Editor","setNodes","bufNodes","_setBufNodes","setEdges","setEditMode","setSelected","cursorPos","setCursorPos","_visibleEdges","_setVisibleEdges","graphColors","setGraphColors","visibleEdges","useMemo","edge","_edges","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","_step2","union","_iterator2","merge","_step3","colorMap","groupColors","_iterator3","_step4","_iterator4","getMapBounds","getBounds","getNorthEast","getSouthWest","ne","sw","getLat","getLng","bottom","right","setTmpNodes","newNodes","_getMapBounds","nodesInGrid","grid","compressNodesInGrid","values","isSelected","selectedNode","node","findNode","array","_step5","_iterator5","getNode","isNodeVisible","relayout","hasNode","_selected","fromID","toID","_ref13","createEdge","onMapClick","loc","latLng","nodeId","onMapMouseUp","onMapMouseMove","updateNodes","addListener","setCursor","removeListener","onMouseDownPoint","container","closest","getAttribute","mouseType","button","i","onMouseUpPoint","guideLine","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","NodePoints","EdgeLines","loadGraphFromFile","_JSON$parse","_ref21","downloadGraphToFile","viewSpeed","viewRunning","ControlProvider","useControlState","SwitchButton","Button","startDecorator","borderTopRightRadius","borderBottomRightRadius","CableIcon","borderTopLeftRadius","borderBottomLeftRadius","_useControlState","_useControlState2","controls","setControls","SwitchButtonControlled","padding","KakaoMap","center","onZoomChanged","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.b902cfb4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport KakaoMapSDK, {\n  Map,\n  useInjectKakaoMapApi,\n  useMap,\n} from \"react-kakao-maps-sdk\"\nimport styled from \"styled-components\"\n\ntype MapProps = KakaoMapSDK.MapProps & {\n  style?: React.CSSProperties\n}\n\nconst Dimmer = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgb(0, 0, 0, 0.5);\n  backdrop-filter: blur(5px);\n`\n\nexport default function MapLoader(props: MapProps): React.ReactElement {\n  const { loading, error } = useInjectKakaoMapApi({\n    appkey: process.env.REACT_APP_KAKAO_MAP_API_KEY as string,\n    libraries: [\"services\", \"clusterer\"],\n    retries: 3,\n  })\n  return (\n    <>\n      {loading || error ? (\n        <Dimmer />\n      ) : (\n        <Map {...(props as KakaoMapSDK.MapProps)} />\n      )}\n    </>\n  )\n}\n","import MapLoader from \"./MapLoader\"\n\nexport default MapLoader\n","import React from \"react\"\nimport MUIDivider from \"@mui/joy/Divider\"\nimport styled, { css } from \"styled-components\"\n\nconst ContainerStyled = styled.div<{ position: \"top\" | \"bottom\" }>`\n  position: absolute;\n  display: flex;\n  left: calc(0px + 50%);\n  translate: -50% 0%;\n  margin: 0 auto;\n  width: fit-content;\n  height: 42px;\n  place-items: center;\n  padding: 6px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 1em;\n  box-sizing: border-box;\n\n  ${({ position }: any) =>\n    position == \"top\"\n      ? css`\n          top: 1rem;\n        `\n      : css`\n          bottom: 1rem;\n        `}\n`\n\nconst ContentStyled = styled.div<{ gap: number }>`\n  display: flex;\n  flex-direction: row;\n  gap: ${({ gap }: any) => `${gap}rem`};\n  margin: 0px auto;\n  place-items: center;\n  box-sizing: border-box;\n`\n\ntype ContainerProps = React.PropsWithChildren & {\n  position: \"top\" | \"bottom\"\n  gap?: number\n  style?: React.CSSProperties\n}\n\nconst HorizontalContainer = ({\n  position,\n  gap = 0.5,\n  style = {},\n  children,\n}: ContainerProps): React.ReactElement => (\n  <ContainerStyled position={position} style={style}>\n    <ContentStyled gap={gap}>{children}</ContentStyled>\n  </ContainerStyled>\n)\n\nexport const Divider = (): React.ReactElement => (\n  <MUIDivider orientation=\"vertical\" />\n)\n\nexport default HorizontalContainer\n","import React from \"react\"\nimport styled, { css, keyframes } from \"styled-components\"\n\nconst paddleAnimation = keyframes`\n  from {\n    transform: scale(1.0);\n    opacity: 1.0;\n  }\n  to {\n    transform: scale(2.0);\n    opacity: 0.0;\n  }\n`\n\ntype CircleStyleProps = {\n  size: number\n  color: string\n  animate?: boolean\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Circle = styled.div`\n  position: absolute;\n  display: flex;\n  width: 1em;\n  height: 1em;\n  background: ${({ color }: CircleStyleProps) => color};\n  border-radius: 8rem;\n  align-items: center;\n  justify-content: center;\n  scale: ${({ size }: CircleStyleProps) => size};\n\n  ${(props: CircleStyleProps) =>\n    props.animate &&\n    css`\n      animation: ${paddleAnimation} 1s ease-in-out infinite;\n    `};\n\n  > .icon {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype DotProps = {\n  color?: string\n  size?: number\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Dot = ({ color = \"dodgerblue\", size = 2, children }: DotProps) => {\n  return (\n    <Container>\n      <Circle color={color} size={size} animate={true} />\n      <Circle color={color} size={size}>\n        <div className=\"icon\">{children}</div>\n      </Circle>\n    </Container>\n  )\n}\n\nexport default Dot\n","import React, { useState, useCallback, PropsWithChildren } from \"react\"\n\nimport styled, { css, keyframes } from \"styled-components\"\n\nimport KeyboardDoubleArrowLeftIcon from \"@mui/icons-material/KeyboardDoubleArrowLeft\"\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\"\n\nconst ContainerWrapper = styled.div<{ fold: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  max-width: 280px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  transition: transform 400ms cubic-bezier(0.65, 0.05, 0.36, 1);\n  z-index: 99999;\n\n  ${({ fold }: any) =>\n    fold &&\n    css`\n      transform: translateX(-100%);\n    `}\n`\n\nconst ContainerStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n  border: 0;\n  border-radius: 0;\n  outline: 0;\n  margin: 0;\n  padding: 1em 2em;\n  box-sizing: border-box;\n  box-shadow: 0 0 1em rgba(128, 128, 128, 0.5);\n  overflow-y: auto;\n`\n\nconst FoldButtonContainerStyled = styled.div`\n  position: absolute;\n  display: flex;\n  width: 1.25em;\n  height: 100%;\n  right: -1.25em;\n  justify-content: center;\n  align-items: center;\n`\n\nconst FoldButtonStyled = styled.div`\n  width: 100%;\n  height: 3em;\n  display: flex;\n  padding: 0 2px;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  background-color: #ffffff;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  clip-path: inset(-1em -1em -1em 0px);\n  box-shadow: 0 0 1em rgba(128, 128, 128, 0.5);\n  cursor: pointer;\n`\n\ntype ContainerProps = {\n  _ref: React.ForwardedRef<any>\n  children?: React.ReactNode\n}\n\nconst Container = ({\n  _ref: ref,\n  children,\n}: ContainerProps): React.ReactElement => {\n  const [fold, setFold] = useState<boolean>(true)\n  const ArrowIcon = useCallback(() => {\n    const props = {\n      sx: {\n        width: \"100%\",\n        fontSize: \"1rem\",\n      },\n    }\n    return fold ? (\n      <KeyboardDoubleArrowRightIcon {...props} />\n    ) : (\n      <KeyboardDoubleArrowLeftIcon {...props} />\n    )\n  }, [fold])\n  return (\n    <ContainerWrapper fold={fold}>\n      <ContainerStyled ref={ref}>\n        <>{children}</>\n      </ContainerStyled>\n      <FoldButtonContainerStyled>\n        <FoldButtonStyled\n          onClick={(evt) => {\n            setFold((prev) => !prev)\n          }}\n        >\n          <ArrowIcon />\n        </FoldButtonStyled>\n      </FoldButtonContainerStyled>\n    </ContainerWrapper>\n  )\n}\n\nconst Aside = React.forwardRef((props: PropsWithChildren, ref) => (\n  <Container _ref={ref}>\n    <>{props.children}</>\n  </Container>\n))\n\nexport default Aside\n","import React, { createContext, useState, useContext } from \"react\"\n\nexport interface ContextState<T> {\n  state: T\n  setState: React.Dispatch<React.SetStateAction<T>>\n}\n\nexport interface StatusState {\n  currentTime: number | null\n  logs: Array<any>\n}\n\nconst initialState: StatusState = {\n  currentTime: null,\n  logs: [],\n}\n\nconst Context: any = createContext<ContextState<StatusState> | undefined>(\n  undefined\n)\n\nexport const StatusProvider = (props: any) => {\n  const [state, setState] = useState<StatusState>(initialState)\n\n  return (\n    <Context.Provider value={{ state: { ...state }, setState }}>\n      <>{props.children}</>\n    </Context.Provider>\n  )\n}\n\nexport const useStatusState = (): [\n  StatusState,\n  React.Dispatch<React.SetStateAction<StatusState>>\n] => {\n  const ctx: ContextState<StatusState> | undefined = useContext(Context)\n  if (ctx === undefined) {\n    throw new Error(\"useStatusState should be used within StatusProvider\")\n  }\n  const { state, setState } = ctx\n  return [\n    state as StatusState,\n    setState as React.Dispatch<React.SetStateAction<StatusState>>,\n  ]\n}\n","import React, { useCallback } from \"react\"\n\nimport MuiIconButton from \"@mui/joy/IconButton\"\nimport MuiTooltip from \"@mui/joy/Tooltip\"\nimport CircularProgress from \"@mui/joy/CircularProgress\"\n\ntype IconButtonProps = React.PropsWithChildren & {\n  tooltip?: React.ReactNode\n  tooltipColor:\n    | \"primary\"\n    | \"neutral\"\n    | \"danger\"\n    | \"info\"\n    | \"success\"\n    | \"warning\"\n  tooltipPlacement?:\n    | \"bottom\"\n    | \"left\"\n    | \"right\"\n    | \"top\"\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"top-end\"\n    | \"top-start\"\n  tooltipSize?: \"sm\" | \"md\" | \"lg\"\n  active: boolean\n  disabled?: boolean\n  loading?: boolean\n  variant?: \"plain\" | \"outlined\" | \"soft\" | \"solid\"\n  size: string\n  onClick: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst IconButton = ({\n  tooltip = undefined,\n  tooltipColor = \"primary\",\n  tooltipPlacement = \"bottom\",\n  tooltipSize = \"sm\",\n  active,\n  disabled = false,\n  loading = false,\n  variant = \"plain\",\n  size,\n  onClick,\n  children,\n}: IconButtonProps) => {\n  return (\n    <MuiTooltip\n      arrow\n      title={tooltip}\n      color={tooltipColor}\n      placement={tooltipPlacement}\n      size={tooltipSize}\n      variant={variant}\n    >\n      <MuiIconButton\n        variant={active ? \"solid\" : \"soft\"}\n        sx={{\n          \"--IconButton-size\": size,\n        }}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {loading ? (\n          <CircularProgress\n            color=\"primary\"\n            size=\"sm\"\n            value={33}\n            variant=\"plain\"\n          />\n        ) : (\n          children\n        )}\n      </MuiIconButton>\n    </MuiTooltip>\n  )\n}\n\nexport default IconButton\n","import React, { useState, useCallback, useRef } from \"react\"\n\nimport { Slider, Menu, MenuItem } from \"@mui/joy\"\nimport UploadIcon from \"@mui/icons-material/Upload\"\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\nimport PauseIcon from \"@mui/icons-material/Pause\"\n\nimport IconButton from \"../../../components/IconButton\"\nimport SlowMotionVideoIcon from \"@mui/icons-material/SlowMotionVideo\"\nimport HorizontalContainer, {\n  Divider,\n} from \"../../../components/HorizontalContainer\"\nimport styled from \"styled-components\"\n\ntype MenuButtonProps = {\n  title?: string\n  active?: boolean\n  disabled?: boolean\n  loading?: boolean\n  icon: React.ReactElement\n  onClick: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst MenuButton = ({\n  title,\n  active = false,\n  disabled = false,\n  loading = false,\n  icon,\n  onClick,\n}: MenuButtonProps) => {\n  return (\n    <IconButton\n      tooltip={title}\n      tooltipColor=\"primary\"\n      tooltipPlacement=\"top\"\n      active={active}\n      disabled={disabled}\n      loading={loading}\n      variant=\"outlined\"\n      size={\"32px\"}\n      onClick={onClick}\n    >\n      {icon}\n    </IconButton>\n  )\n}\n\ntype SpeedControlProps = {\n  speed: number\n  onSelectSpeed: (speed: number) => void\n}\n\nconst PlaySpeedButton = ({\n  speed,\n  onSelectSpeed,\n}: SpeedControlProps): React.ReactElement => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const isOpen = Boolean(anchorEl)\n  const handleClick = (event: React.SyntheticEvent<any>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const close = () => {\n    setAnchorEl(null)\n  }\n  const select = (item: number) => {\n    onSelectSpeed(item)\n    close()\n  }\n\n  const Item = useCallback(\n    (item: number): React.ReactElement => (\n      <MenuItem\n        {...(speed === item && { selected: true, variant: \"soft\" })}\n        onClick={() => select(item)}\n      >\n        x{item.toFixed(1)}\n      </MenuItem>\n    ),\n    [speed]\n  )\n\n  return (\n    <div>\n      <MenuButton\n        title={isOpen ? undefined : \"재생 속도\"}\n        onClick={handleClick}\n        icon={<SlowMotionVideoIcon />}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={isOpen}\n        onClose={close}\n        color=\"primary\"\n        size=\"sm\"\n        variant=\"plain\"\n      >\n        {Item(1.0)}\n        {Item(2.0)}\n        {Item(5.0)}\n        {Item(10.0)}\n      </Menu>\n    </div>\n  )\n}\n\nconst SliderWrapperStyled = styled.div`\n  width: calc(100vw - 600px);\n  width: calc(100svw - 600px);\n  max-width: 480px;\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  box-sizing: border-box;\n`\n\ntype ViewerButtonsProps = {\n  running: boolean\n  runable: boolean\n  progressMax: number\n  progressCurrent: number\n  onProgressUpdated: (progress: number) => void\n  onClickPlay: () => void\n  onClickUpload: (event: React.ChangeEvent<HTMLInputElement>) => void\n} & SpeedControlProps\n\nconst ViewerButtons = ({\n  running,\n  runable,\n  progressMax,\n  progressCurrent,\n  speed,\n  onSelectSpeed,\n  onProgressUpdated,\n  onClickPlay,\n  onClickUpload,\n}: ViewerButtonsProps): React.ReactElement => {\n  const PlayControlButton = useCallback((): React.ReactElement => {\n    return running ? (\n      <MenuButton title=\"일시정지\" onClick={onClickPlay} icon={<PauseIcon />} />\n    ) : (\n      <MenuButton\n        title=\"재생\"\n        disabled={!runable}\n        onClick={onClickPlay}\n        icon={<PlayArrowIcon />}\n      />\n    )\n  }, [running, runable])\n\n  const UploadButton = useCallback((): React.ReactElement => {\n    const ref = useRef<HTMLInputElement>(null)\n    return (\n      <>\n        <label\n          htmlFor=\"upload-log\"\n          style={{\n            width: \"32px\",\n          }}\n        >\n          <input\n            ref={ref}\n            style={{ display: \"none\" }}\n            id=\"upload-log\"\n            name=\"upload-log\"\n            type=\"file\"\n            accept=\".json,application/json\"\n            onChange={onClickUpload}\n          />\n          <MenuButton\n            title=\"업로드\"\n            icon={<UploadIcon />}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.click()\n              }\n            }}\n          />\n        </label>\n      </>\n    )\n  }, [onClickUpload])\n\n  return (\n    <>\n      <HorizontalContainer position=\"bottom\">\n        <UploadButton />\n        <PlayControlButton />\n        <PlaySpeedButton speed={speed} onSelectSpeed={onSelectSpeed} />\n        <Divider />\n        <SliderWrapperStyled>\n          <Slider\n            color=\"primary\"\n            aria-label=\"Timestamp\"\n            defaultValue={0}\n            value={progressCurrent}\n            min={0}\n            max={progressMax}\n            step={1}\n            disabled={!runable || running}\n            size=\"md\"\n            valueLabelDisplay=\"off\"\n            variant=\"solid\"\n            onChange={(\n              event: React.SyntheticEvent | Event,\n              value: number | number[]\n            ) => {\n              console.log(\"new value\", value)\n              if (typeof value === \"number\") {\n                onProgressUpdated(value)\n              } else {\n                onProgressUpdated(value[0])\n              }\n            }}\n            style={{\n              width: \"calc(100% - 0.5rem)\",\n              marginLeft: \"0.5rem\",\n            }}\n          />\n        </SliderWrapperStyled>\n      </HorizontalContainer>\n    </>\n  )\n}\n\nexport default ViewerButtons\n","export const randomColor = () => \"#\" + Math.random().toString(16).slice(-6)\n\nexport const randomDarkColor = () => {\n  let rgb = [Math.random() * 255, Math.random() * 255, Math.random() * 255].map(\n    Math.round\n  )\n  if (rgb.filter((c) => c >= 128).length > 2) {\n    rgb = rgb.map((c) => Math.max(0, (c - 128) * 2))\n  }\n  return \"#\" + rgb.map((c) => c.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","/* global kakao */\n\nimport React, {\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  CSSProperties,\n} from \"react\"\n\nimport Dot from \"../../components/Dot\"\nimport Aside from \"../../components/Aside\"\n\nimport LocalTaxiIcon from \"@mui/icons-material/LocalTaxi\"\nimport HailIcon from \"@mui/icons-material/Hail\"\nimport KeyboardDoubleArrowDownIcon from \"@mui/icons-material/KeyboardDoubleArrowDown\"\nimport { Divider, Stack, Typography } from \"@mui/joy\"\n\nimport { CustomOverlayMap, useMap } from \"react-kakao-maps-sdk\"\n\nimport { useStatusState, StatusState } from \"../../providers/StatusProvider\"\nimport ViewerButtons from \"./Controls/ViewerButtons\"\nimport { humanizeDate } from \"../../helpers/stringFormat\"\nimport { randomDarkColor } from \"../../helpers/colors\"\nimport styled from \"styled-components\"\n\nconst MarkerType = {\n  NONE: -1,\n  VEHICLE: 0,\n  PERSON_PICK: 1,\n  PERSON_DROP: 2,\n}\n\ntype MarkerPosition = {\n  key: string | null\n  color?: string\n  size: number\n  lat: number\n  lng: number\n  type: number\n}\n\ninterface ColorName {\n  [key: string]: string\n}\n\ntype TaskType = {\n  id: number\n  drop_lat: number\n  drop_lng: number\n  pick_lat: number\n  pick_lng: number\n  status: number\n  time: number\n}\n\nconst LogIcon = ({\n  color,\n  style,\n  children,\n  onClick,\n}: any): React.ReactElement => (\n  <div\n    style={{\n      backgroundColor: color || \"black\",\n      display: \"flex\",\n      justifyItems: \"center\",\n      alignItems: \"center\",\n      width: \"32px\",\n      height: \"32px\",\n      borderRadius: \"6rem\",\n      ...style,\n    }}\n    onClick={onClick || null}\n  >\n    <>{children}</>\n  </div>\n)\n\nconst VehicleLogInfoStyled = styled.div`\n  width: calc(100% - 12px);\n  position: relative;\n  box-sizing: border-box;\n  padding: 0 6px;\n  display: flex;\n  align-items: center;\n`\n\nconst RoadLineStyled = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 3px;\n  background-color: #efefef;\n  border-radius: 1em;\n  z-index: 0;\n`\n\ntype DisplayIconProps = {\n  type: number\n  style?: CSSProperties\n}\n\nconst Icon = ({ type, style = {} }: DisplayIconProps): any => {\n  const iconStyle = {\n    fill: \"white\",\n    marginTop: \"-1px\",\n    width: \"75%\",\n    ...style,\n  }\n  if (type == MarkerType.NONE) {\n    return <></>\n  } else if (type == MarkerType.VEHICLE) {\n    return <LocalTaxiIcon style={iconStyle} />\n  } else if (type == MarkerType.PERSON_PICK) {\n    return <HailIcon style={iconStyle} />\n  } else if (type == MarkerType.PERSON_DROP) {\n    return <KeyboardDoubleArrowDownIcon style={iconStyle} />\n  }\n}\n\nconst LogInfoStyled = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  padding: 0.5rem 0;\n`\n\nconst get_slope_weight = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  cx: number,\n  cy: number\n) => {\n  const lx = Math.abs(x2 - x1)\n  const ly = Math.abs(y2 - y1)\n  const dx = cx - x1\n  const dy = cy - y1\n  const r = Math.sqrt(dx * dx + dy * dy) / Math.sqrt(lx * lx + ly * ly)\n  return Math.max(0.0, Math.min(r * 100.0, 100.0))\n}\n\nconst Viewer = (): React.ReactElement => {\n  const [markerPositions, setMarkerPositions] = useState<Array<MarkerPosition>>(\n    []\n  )\n  const [status, setStatus] = useStatusState()\n  const [level, setLevel] = useState<number>(3)\n  const [runable, setRunable] = useState<boolean>(false)\n  const [running, setRunning] = useState<boolean>(false)\n  const [speed, setSpeed] = useState<number>(1.0)\n  const [progressMax, setProgressMax] = useState<number>(0)\n  const [progressCurrent, setProgressCurrent] = useState<number>(0)\n  const [allColors, setColors] = useState<ColorName>({})\n  const [logs, setLogs] = useState<Array<any>>([])\n\n  useEffect(() => {\n    const { logs } = status as StatusState\n    setRunable(logs && logs.length > 0)\n    setLogs(logs)\n    setProgressCurrent(0)\n  }, [status])\n\n  const map = useMap()\n\n  useEffect(() => {\n    setLevel(map.getLevel())\n  }, [map])\n\n  useEffect(() => {\n    map.setLevel(level)\n  }, [map, level])\n\n  const displayTimeAt = useCallback(\n    (t: number) => {\n      if (!logs || t >= logs.length) return\n\n      const { time, vehicles, tasks } = logs[t]\n\n      const vMarkers: Array<MarkerPosition> = Array.from(vehicles || []).map(\n        ({ name, lat, lng }: any) => ({\n          key: name,\n          color: allColors[name],\n          size: 5,\n          lat,\n          lng,\n          type: MarkerType.VEHICLE,\n        })\n      )\n\n      const tMarkers: Array<MarkerPosition> = Array.from(tasks || [])\n        .map(\n          ({\n            id,\n            pick_lat,\n            pick_lng,\n            drop_lat,\n            drop_lng,\n            status,\n          }: any): any[] => [\n            0 <= status && status <= 5\n              ? {\n                  key: `task-${id}-pick`,\n                  color: allColors[id],\n                  size: 4,\n                  lat: pick_lat,\n                  lng: pick_lng,\n                  type: MarkerType.PERSON_PICK,\n                }\n              : null,\n            {\n              key: `task-${id}-drop`,\n              color: allColors[id],\n              size: 4,\n              lat: drop_lat,\n              lng: drop_lng,\n              type: MarkerType.PERSON_DROP,\n            },\n          ]\n        )\n        .flat()\n        .filter((value) => value !== null)\n\n      setMarkerPositions([...vMarkers, ...tMarkers])\n    },\n    [logs, allColors]\n  )\n\n  useEffect(() => {\n    displayTimeAt(progressCurrent)\n  }, [progressCurrent])\n\n  useEffect(() => {\n    if (!running) return\n\n    // 1 frame contains 60 secs\n    const DEFAULT_TIMESTEP = 60 * 1000\n    // 1 frame / 1000 ms\n    const interval = DEFAULT_TIMESTEP / 60 / (speed || 1.0)\n    console.log(\"info\", interval, running, speed)\n\n    const timer = setTimeout(() => {\n      setProgressCurrent((prev) => prev + 1)\n    }, interval)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [running, speed, progressCurrent])\n\n  const fitMapBound = useCallback(\n    (nodes: Array<{ lat: number; lng: number }>) => {\n      if (nodes.length < 1) return\n      const bounds = new kakao.maps.LatLngBounds()\n      nodes.forEach(({ lat, lng }) => {\n        bounds.extend(new kakao.maps.LatLng(lat, lng))\n      })\n      map.setBounds(bounds)\n    },\n    [map]\n  )\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n\n    const positions = logs\n      .map(({ vehicles, tasks }: any) =>\n        vehicles\n          .map(({ lat, lng }: any) => ({ lat, lng }))\n          .concat(\n            ...tasks.map(\n              ({ pick_lat, pick_lng, drop_lat, drop_lng }: TaskType) => [\n                {\n                  lat: pick_lat,\n                  lng: pick_lng,\n                },\n                {\n                  lat: drop_lat,\n                  lng: drop_lng,\n                },\n              ]\n            )\n          )\n      )\n      .flat()\n\n    setProgressMax(logs.length - 1)\n    fitMapBound(positions)\n    displayTimeAt(0)\n  }, [logs, fitMapBound, displayTimeAt])\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n\n    // collect and create pairs of name and color\n    const nameKeyValueMap: ColorName = [\n      ...Array.from(\n        new Set<string>(\n          logs\n            .map(({ vehicles, tasks }: any) =>\n              vehicles\n                .map(({ name }: any) => `${name}`)\n                .concat(tasks.map(({ id }: any) => `${id}`))\n            )\n            .flat()\n        )\n      ),\n    ]\n      .map((name: string) => ({\n        [name]: randomDarkColor(),\n      }))\n      .reduce(\n        (\n          previousValue: { [x: string]: string },\n          currentValue: { [x: string]: string }\n        ) => ({\n          ...previousValue,\n          ...currentValue,\n        }),\n        {}\n      )\n\n    setColors(nameKeyValueMap)\n  }, [logs])\n\n  const loadLogFromFile = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const files = evt.target.files\n    if (!files || files.length < 1) {\n      return\n    }\n    const file = files[0]\n    const reader: FileReader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const result = event.target.result\n      try {\n        const { logs } = JSON.parse(result)\n        setStatus((prev) => ({ ...prev, logs }))\n        displayTimeAt(0)\n      } catch {\n        window.alert(\"Wrong JSON file format\")\n      }\n    })\n    reader.readAsText(file)\n  }\n\n  const focusTo = useCallback(\n    ({ lat, lng }: any) => {\n      map.panTo(new kakao.maps.LatLng(lat, lng))\n    },\n    [map]\n  )\n\n  const LogInfo = useCallback(\n    ({ time, vehicles, tasks, colors }: any) => {\n      return (\n        <>\n          {vehicles\n            .filter(({ allocated_id }: any) => allocated_id != null)\n            .sort((a: any, b: any) => {\n              const prev = `${a.lat}-${b.lat}`\n              const next = `${a.lng}-${b.lng}`\n              if (prev < next) return -1\n              return prev === next ? 0 : 1\n            })\n            .map(({ name, lat, lng, allocated_id }: any) => {\n              const task = Array.from(tasks || []).filter(\n                ({ id }: any) => id === allocated_id\n              )\n              if (task.length < 1) return null\n              const {\n                id,\n                status,\n                pick_lat,\n                pick_lng,\n                drop_lat,\n                drop_lng,\n              }: TaskType = task[0] as TaskType\n\n              const isPicked = status > 5\n              const isDroped = status > 6\n\n              const IconReadyStyle = {\n                backgroundColor: \"transparent\",\n                borderWidth: \"1px\",\n                borderColor: colors[id],\n                borderStyle: \"dashed\",\n              }\n\n              const IconNotReadyStyle = {\n                borderWidth: \"1px\",\n                borderColor: \"transparent\",\n                borderStyle: \"solid\",\n              }\n\n              const IconReadyInnerStyle = {\n                fill: colors[id],\n              }\n\n              return (\n                <LogInfoStyled className=\"pairs\" key={`log-info-${id}`}>\n                  <LogIcon\n                    color={status <= 5 ? \"transparent\" : colors[id]}\n                    style={{\n                      justifySelf: \"flex-start\",\n                      cursor: \"pointer\",\n                      ...(isPicked ? IconNotReadyStyle : IconReadyStyle),\n                    }}\n                    onClick={() => {\n                      focusTo({\n                        lat: pick_lat,\n                        lng: pick_lng,\n                      })\n                    }}\n                  >\n                    <Icon\n                      type={MarkerType.PERSON_PICK}\n                      style={{\n                        margin: \"0 auto\",\n                        ...(isPicked ? {} : IconReadyInnerStyle),\n                      }}\n                    />\n                  </LogIcon>\n                  <VehicleLogInfoStyled>\n                    <RoadLineStyled\n                      style={isPicked ? { backgroundColor: colors[id] } : {}}\n                    />\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"calc(100% - 32px)\",\n                        top: 0,\n                      }}\n                    >\n                      <LogIcon\n                        key={`logicon-name`}\n                        color={colors[name]}\n                        style={{\n                          position: \"absolute\",\n                          left: `${get_slope_weight(\n                            pick_lat,\n                            pick_lng,\n                            drop_lat,\n                            drop_lng,\n                            lat,\n                            lng\n                          )}%`,\n                          transition: \"all 300ms ease\",\n                          cursor: \"pointer\",\n                          zIndex: 1,\n                        }}\n                        onClick={() => {\n                          focusTo({\n                            lat,\n                            lng,\n                          })\n                        }}\n                      >\n                        <Icon\n                          type={MarkerType.VEHICLE}\n                          style={{\n                            margin: \"0 auto\",\n                          }}\n                        />\n                      </LogIcon>\n                    </div>\n                  </VehicleLogInfoStyled>\n                  <LogIcon\n                    color={colors[id]}\n                    style={{\n                      justifySelf: \"flex-end\",\n                      cursor: \"pointer\",\n                      ...(isDroped ? IconNotReadyStyle : IconReadyStyle),\n                    }}\n                    onClick={() => {\n                      focusTo({\n                        lat: drop_lat,\n                        lng: drop_lng,\n                      })\n                    }}\n                  >\n                    <Icon\n                      type={MarkerType.PERSON_DROP}\n                      style={{\n                        margin: \"0 auto\",\n                        ...(isDroped ? {} : IconReadyInnerStyle),\n                      }}\n                    />\n                  </LogIcon>\n                </LogInfoStyled>\n              )\n            })}\n        </>\n      )\n    },\n    [focusTo]\n  )\n\n  const [subLogs, setSubLogs] = useState<Array<any>>([])\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n    const sliced: Array<{\n      time: number\n      vehicles: Array<any>\n      tasks: Array<any>\n    }> = logs.slice(0, progressCurrent + 1)\n    setSubLogs(sliced)\n  }, [logs, progressCurrent])\n\n  const StateViewer = useCallback((): React.ReactElement => {\n    if (!subLogs || subLogs.length < 1) {\n      return (\n        <center\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: 0,\n            width: \"100%\",\n          }}\n        >\n          <Typography\n            color=\"neutral\"\n            fontSize={2}\n            sx={{\n              translate: \"0% -50%\",\n              textAlign: \"center\",\n            }}\n          >\n            재생할 정보가 없습니다.\n          </Typography>\n        </center>\n      )\n    }\n    const latestLog = subLogs[subLogs.length - 1]\n    const { time, vehicles, tasks } = latestLog\n    return (\n      <Stack spacing={1}>\n        <div key={`log-${time}`}>\n          <Divider\n            sx={{\n              marginTop: \"0.5rem\",\n              marginBottom: \"0.25rem\",\n            }}\n          >\n            <Typography color=\"neutral\" fontSize={2}>\n              {humanizeDate(new Date(time))}\n            </Typography>\n          </Divider>\n          <LogInfo\n            time={time}\n            vehicles={vehicles}\n            tasks={tasks}\n            colors={allColors}\n          />\n        </div>\n      </Stack>\n    )\n  }, [subLogs, allColors])\n\n  return (\n    <>\n      {markerPositions.map(\n        ({ key, color, size, lat, lng, type }: MarkerPosition) => (\n          <CustomOverlayMap\n            key={key}\n            position={{\n              lat,\n              lng,\n            }}\n            ref={(ref: any) => {\n              if (ref == null) return\n              const parentNode = ref.cc.parentElement\n              parentNode.className = \"vehicle-marker\"\n            }}\n          >\n            <Dot color={color || \"dodgerblue\"} size={size / level}>\n              <Icon type={type as number} />\n            </Dot>\n          </CustomOverlayMap>\n        )\n      )}\n      <ViewerButtons\n        running={running}\n        runable={runable}\n        progressMax={progressMax}\n        progressCurrent={progressCurrent}\n        speed={speed}\n        onSelectSpeed={setSpeed}\n        onProgressUpdated={setProgressCurrent}\n        onClickPlay={() => setRunning(!running)}\n        onClickUpload={loadLogFromFile}\n      />\n\n      <Aside>\n        <StateViewer />\n      </Aside>\n    </>\n  )\n}\n\nexport default Viewer\n","export const humanizeDate = (date: Date): string => {\n  const options = {\n    timeZone: \"Asia/Seoul\",\n  }\n  const dateString: string = new Intl.DateTimeFormat(\"ko-kr\", {\n    dateStyle: \"full\",\n    ...options,\n  }).format(date)\n  const dayPeriod: string = new Intl.DateTimeFormat(\"ko-kr\", {\n    dayPeriod: \"long\",\n    ...options,\n  }).format(date)\n  const timeFormat = new Intl.DateTimeFormat(\"ko-kr\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    hour12: true,\n    ...options,\n  }).format(date)\n  const [hour, minute, sec] = timeFormat.split(\" \")[1].split(\":\")\n  const timeString: string = `${hour}시 ${minute}분`\n  return [dateString, dayPeriod, timeString].join(\"\\n\")\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\ntype CircleStyleProps = {\n  size: number\n  color?: string\n  selected: boolean\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Circle = styled.div`\n  position: absolute;\n  display: flex;\n  width: 0.75em;\n  height: 0.75em;\n  background: white;\n  border-width: 0.15rem;\n  border-style: solid;\n  border-color: ${({ selected, color = \"#d3232f\" }: CircleStyleProps) =>\n    selected ? \"black\" : color};\n  border-radius: 8rem;\n  align-items: center;\n  justify-content: center;\n  scale: ${({ size }: CircleStyleProps) => size};\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${({ selected, color = \"#a10e25\" }: CircleStyleProps) =>\n      selected ? \"black\" : color};\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype PointProps = {\n  id: string\n  size?: number\n  color?: string\n  selected?: boolean\n  children?: React.ReactNode | React.ReactNode[]\n  onMouseEnter?: React.MouseEventHandler<any>\n  onMouseLeave?: React.MouseEventHandler<any>\n  onMouseDown?: React.MouseEventHandler<any>\n  onMouseUp?: React.MouseEventHandler<any>\n  onClick?: React.MouseEventHandler<any>\n}\n\nconst Point = ({\n  id,\n  size = 2,\n  selected = false,\n  color,\n  children,\n  onMouseEnter,\n  onMouseDown,\n  onMouseLeave,\n  onMouseUp,\n  onClick,\n}: PointProps) => {\n  return (\n    <Container data-id={id}>\n      <Circle\n        size={size}\n        color={color}\n        selected={selected}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      >\n        <div className=\"icon\">{children}</div>\n      </Circle>\n    </Container>\n  )\n}\n\nexport default Point\n","import React, { useCallback, useRef } from \"react\"\n\nimport GrainIcon from \"@mui/icons-material/Grain\"\nimport PolylineIcon from \"@mui/icons-material/Polyline\"\nimport OpenWithIcon from \"@mui/icons-material/OpenWith\"\nimport UploadIcon from \"@mui/icons-material/Upload\"\nimport DownloadIcon from \"@mui/icons-material/Download\"\n\nimport IconButton from \"../../../components/IconButton\"\nimport HorizontalContainer, {\n  Divider,\n} from \"../../../components/HorizontalContainer\"\n\ntype MenuButtonProps = {\n  title: string\n  active?: boolean\n  icon: React.ReactElement\n  onClick: () => void\n}\n\nconst MenuButton = ({\n  title,\n  active = false,\n  icon,\n  onClick,\n}: MenuButtonProps) => {\n  return (\n    <IconButton\n      tooltip={title}\n      tooltipColor=\"primary\"\n      tooltipPlacement=\"top\"\n      active={active}\n      variant=\"outlined\"\n      size={\"32px\"}\n      onClick={onClick}\n    >\n      {icon}\n    </IconButton>\n  )\n}\n\ntype EditorButtonsProps = {\n  editMode: string\n  onModeChanged: (mode: string) => void\n  onClickUpload: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onClickDownload: () => void\n}\n\nconst EditorButtons = ({\n  editMode,\n  onModeChanged,\n  onClickUpload,\n  onClickDownload,\n}: EditorButtonsProps): React.ReactElement => {\n  const onSelectMode = (mode: string) => {\n    onModeChanged(mode)\n  }\n\n  const ModeButtons = useCallback((): React.ReactElement => {\n    return (\n      <>\n        <MenuButton\n          title=\"점 추가/삭제\"\n          active={editMode === \"add\"}\n          icon={<GrainIcon />}\n          onClick={() => onSelectMode(\"add\")}\n        />\n        <MenuButton\n          title=\"점 연결\"\n          active={editMode === \"link\"}\n          icon={<PolylineIcon />}\n          onClick={() => onSelectMode(\"link\")}\n        />\n        <MenuButton\n          title=\"점 이동\"\n          active={editMode === \"move\"}\n          icon={<OpenWithIcon />}\n          onClick={() => onSelectMode(\"move\")}\n        />\n      </>\n    )\n  }, [editMode])\n\n  const UploadButton = useCallback((): React.ReactElement => {\n    const ref = useRef<HTMLInputElement>(null)\n    return (\n      <>\n        <label\n          htmlFor=\"upload-log\"\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <input\n            ref={ref}\n            style={{ display: \"none\" }}\n            id=\"upload-log\"\n            name=\"upload-log\"\n            type=\"file\"\n            accept=\".json,application/json\"\n            onChange={onClickUpload}\n          />\n          <MenuButton\n            title=\"업로드\"\n            icon={<UploadIcon />}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.click()\n              }\n            }}\n          />\n        </label>\n      </>\n    )\n  }, [onClickUpload])\n\n  const DownloadButton = useCallback(\n    (): React.ReactElement => (\n      <MenuButton\n        title=\"다운로드\"\n        icon={<DownloadIcon />}\n        onClick={onClickDownload}\n      />\n    ),\n    [onClickDownload]\n  )\n\n  return (\n    <>\n      <HorizontalContainer position=\"bottom\">\n        <ModeButtons />\n        <Divider />\n        <UploadButton />\n        <DownloadButton />\n      </HorizontalContainer>\n    </>\n  )\n}\n\nexport default EditorButtons\n","export interface Node {\n  lat: number\n  lng: number\n}\n\nexport interface Edge {\n  from: number\n  to: number\n}\n\nclass UnionSet {\n  nodes: Node[]\n  parentIdx: Map<string | number, string | number>\n\n  constructor(nodes: Node[]) {\n    this.nodes = nodes\n\n    this.parentIdx = new Map()\n  }\n\n  hasKey(id: string | number): boolean {\n    return id in this.parentIdx\n  }\n\n  find(id: string | number): string | number {\n    const parent = this.parentIdx.get(id)\n    if (!parent || id === parent) {\n      this.parentIdx.set(id, id)\n      return id\n    } else {\n      const president = this.find(parent)\n      this.parentIdx.set(id, president)\n      return president\n    }\n  }\n\n  merge(a: string | number, b: string | number): void {\n    const ga = this.find(a)\n    const gb = this.find(b)\n    this.parentIdx.set(ga, gb)\n  }\n\n  keys(): Array<string | number> {\n    return Array.from(this.parentIdx.keys())\n  }\n}\n\nexport default UnionSet\n","/* global kakao */\n\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\"\n\nimport Point from \"../../components/Point\"\nimport EditorButtons from \"./Controls/EditorButtons\"\nimport { jsonToBlob, saveFile } from \"../../helpers/fileInteracts\"\nimport { randomDarkColor } from \"../../helpers/colors\"\nimport UnionSet from \"../../helpers/unionSet\"\n\nimport { CustomOverlayMap, useMap, Polyline } from \"react-kakao-maps-sdk\"\n\ntype NodeType = {\n  key: string\n  lat: number\n  lng: number\n}\n\ntype EdgeType = {\n  from: string\n  to: string\n}\n\nconst saveGraphFile = (\n  nodes: Array<NodeType>,\n  edges: Array<EdgeType>\n): void => {\n  const keys: Array<string> = nodes.map(({ key }) => key)\n  const keyToIndex = (key: string): number => keys.indexOf(key)\n  const transformed = {\n    nodes: nodes.map(({ key, lat, lng }: NodeType) => ({\n      id: keyToIndex(key),\n      lat,\n      lng,\n      info: {},\n    })),\n    edges: edges.map(({ from, to }: EdgeType) => ({\n      from: keyToIndex(from),\n      to: keyToIndex(to),\n    })),\n  }\n  const filename = \"graph-\" + new Date().toISOString() + \".json\"\n  saveFile(filename, jsonToBlob(transformed))\n}\n\nconst Editor = (): React.ReactElement => {\n  const map: kakao.maps.Map = useMap()\n  const [nodes, setNodes] = useState<Array<NodeType>>([])\n  const [bufNodes, _setBufNodes] = useState<Array<NodeType>>([])\n  const [edges, setEdges] = useState<Array<EdgeType>>([])\n  const [level, setLevel] = useState<number>(1)\n  const [editMode, setEditMode] = useState<string>(\"add\")\n  const [selected, setSelected] = useState<Array<string>>([])\n  const [cursorPos, setCursorPos] = useState<NodeType>()\n\n  const [_visibleEdges, _setVisibleEdges] = useState<EdgeType[]>([])\n  const [graphColors, setGraphColors] = useState<Map<string, string>>(new Map())\n\n  const visibleEdges = useMemo((): Array<EdgeType> => {\n    console.log(\"_visibleEdges\", _visibleEdges)\n    return _visibleEdges.map((edge: EdgeType) => {\n      const { from, to } = edge\n      return edge\n    })\n  }, [_visibleEdges])\n\n  useEffect(() => {\n    const _edges = edges.filter(({ from, to }: EdgeType) => {\n      for (const { key } of bufNodes) {\n        if (from === key || to === key) return true\n      }\n      return false\n    })\n    _setVisibleEdges(_edges)\n  }, [bufNodes, edges])\n\n  useEffect(() => {\n    const union = new UnionSet(nodes)\n    for (const e of edges) {\n      union.merge(e.from, e.to)\n    }\n    const colorMap = new Map<string, string>()\n    const groupColors = new Map<string, string>()\n    for (const key of union.keys()) {\n      groupColors.set(key as string, randomDarkColor())\n    }\n    for (const { from, to } of edges) {\n      const a = union.find(from) as string\n      const b = union.find(to) as string\n      colorMap.set(from, groupColors.get(a) as string)\n      colorMap.set(to, groupColors.get(b) as string)\n    }\n    console.log(\"set graph colors\", colorMap)\n    setGraphColors(colorMap)\n  }, [nodes, edges])\n\n  const getMapBounds = useCallback(() => {\n    const bounds = map.getBounds()\n    const level = map.getLevel()\n    const [ne, sw] = [bounds.getNorthEast(), bounds.getSouthWest()]\n    const top = sw.getLat()\n    const left = sw.getLng()\n    const bottom = ne.getLat()\n    const right = ne.getLng()\n    const width: number = right - left\n    const height: number = bottom - top\n    return {\n      level,\n      top,\n      left,\n      bottom,\n      right,\n      width,\n      height,\n    }\n  }, [map])\n\n  const setTmpNodes = useCallback(\n    (newNodes: Array<NodeType>) => {\n      const { top, left, bottom, right, width, height, level } = getMapBounds()\n      const nodesInBounds = newNodes.filter(\n        ({ lat, lng }: NodeType): boolean =>\n          top <= lat && lat <= bottom && left <= lng && lng <= right\n      )\n      type nodeInGrid = { lat: number; lng: number; grid: string }\n      const nodesInGrid: Array<nodeInGrid> = nodesInBounds.map(\n        ({ key, lat, lng }) => ({\n          id: key,\n          key,\n          lat,\n          lng,\n          grid: `${Math.round(lat / (width / 100))},${Math.round(\n            lng / (height / 100)\n          )}`,\n        })\n      )\n      const compressNodesInGrid: Array<NodeType> = [\n        ...Array.from(\n          new Map(\n            nodesInGrid.map(({ key, grid, lat, lng }: any) => [\n              grid,\n              {\n                id: key,\n                key,\n                lat,\n                lng,\n              } as NodeType,\n            ])\n          ).values()\n        ),\n      ]\n      console.log(\"Bounds:\", top, left, bottom, right)\n      console.log(\"Nodes(Grid)\", nodesInGrid, compressNodesInGrid)\n      console.log(\"Bounds (width, height)\", bottom - top, right - left, level)\n      console.log(\"Set New Temporal Nodes\", compressNodesInGrid)\n      _setBufNodes(compressNodesInGrid)\n    },\n    [getMapBounds]\n  )\n\n  const isSelected = useCallback(\n    (id: string) => selected.indexOf(id) !== -1,\n    [selected]\n  )\n\n  const selectedNode = useMemo((): NodeType | null => {\n    const node = nodes.filter(({ key }) => isSelected(key))\n    return node.length > 0 ? node[0] : null\n  }, [nodes, isSelected])\n\n  const createEdge = (from: NodeType, to: NodeType) => {\n    setEdges((prev) =>\n      prev\n        .filter((edge) => !(edge.from == from.key && edge.to == to.key))\n        .concat({\n          from: from.key,\n          to: to.key,\n        } as EdgeType)\n    )\n  }\n\n  const findNode = (id: string, array: Array<NodeType>): NodeType | null => {\n    for (const node of array) {\n      const { key } = node\n      if (key === id) return node\n    }\n    return null\n  }\n\n  const getNode = useCallback(\n    (id: string): NodeType | null => {\n      return findNode(id, nodes)\n    },\n    [nodes]\n  )\n\n  const isNodeVisible = useCallback(\n    (id: string): boolean => {\n      const result = findNode(id, bufNodes) !== null\n      console.log(\"isNodeVisible\", id, result)\n      return result\n    },\n    [bufNodes]\n  )\n\n  useEffect(() => {\n    setLevel(map.getLevel())\n    setTimeout(() => {\n      map.relayout()\n    }, 0)\n  }, [map])\n\n  useEffect(() => {\n    // update edge to sync up\n    const hasNode = (id: string): boolean => getNode(id) !== null\n    setEdges((prev) =>\n      prev.filter(({ from, to }: EdgeType) => hasNode(from) && hasNode(to))\n    )\n  }, [getNode, setEdges])\n\n  useEffect(() => {\n    console.log(\"selected\", selected)\n    if (selected.length >= 2) {\n      const [fromID, toID] = selected\n      const [from, to] = [getNode(fromID), getNode(toID)]\n      if (from !== null && to !== null) {\n        createEdge(from, to)\n        setCursorPos(undefined)\n        setSelected([])\n      }\n      return\n    }\n  }, [selected, getNode, setCursorPos])\n\n  const onMapClick = useCallback(\n    (evt: any) => {\n      const { latLng: loc } = evt\n      if (editMode !== \"add\") {\n        return\n      }\n      const lat = loc.getLat()\n      const lng = loc.getLng()\n      console.log(\"Map Clicked\", lat, lng)\n      setNodes((prev) => {\n        const nodeId = Math.random().toString(16).slice(2) as string\n        const node = { key: `node-${nodeId}`, lat, lng } as NodeType\n        console.log(\"add node\", node)\n        return [...prev, node]\n      })\n    },\n    [editMode]\n  )\n\n  const onMapMouseUp = useCallback((evt: any) => {}, [])\n\n  const onMapMouseMove = useCallback(\n    (evt: any) => {\n      const { latLng: loc } = evt\n      const lat = loc.getLat()\n      const lng = loc.getLng()\n      if (editMode === \"link\") {\n        setCursorPos({ key: \"cursor\", lat, lng } as NodeType)\n      } else if (editMode === \"move\") {\n        if (selected.length != 1) {\n          return\n        }\n        setNodes((prev) =>\n          prev.map((node: NodeType): NodeType => {\n            if (selected[0] !== node.key) {\n              return node\n            } else {\n              return { ...node, lat, lng }\n            }\n          })\n        )\n      }\n    },\n    [editMode, setNodes, selected, setCursorPos]\n  )\n\n  useEffect(() => {\n    const updateNodes = () => setTmpNodes(nodes)\n    kakao.maps.event.addListener(map, \"idle\", updateNodes)\n    return () => {\n      kakao.maps.event.addListener(map, \"idle\", updateNodes)\n    }\n  }, [map, nodes])\n\n  useEffect(() => {\n    setTmpNodes(nodes)\n  }, [nodes])\n\n  useEffect(() => {\n    map.setCursor(\"default\")\n    kakao.maps.event.addListener(map, \"click\", onMapClick)\n    kakao.maps.event.addListener(map, \"mouseup\", onMapMouseUp)\n    kakao.maps.event.addListener(map, \"mousemove\", onMapMouseMove)\n    return () => {\n      map.setCursor(\"\")\n      kakao.maps.event.removeListener(map, \"click\", onMapClick)\n      kakao.maps.event.removeListener(map, \"mouseup\", onMapMouseUp)\n      kakao.maps.event.removeListener(map, \"mousemove\", onMapMouseMove)\n    }\n  }, [map, onMapClick, onMapMouseUp, onMapMouseMove])\n\n  const onMouseDownPoint = useCallback(\n    (evt: any) => {\n      const container = evt.target.closest(\"[data-id]\") as HTMLElement\n      if (!container) return\n      const id = container.getAttribute(\"data-id\") || \"\"\n      const mouseType = evt.button as number\n      if (editMode === \"add\") {\n        if (mouseType === 2) {\n          // right button\n          setNodes((prev) => [...prev].filter(({ key }) => key !== id))\n        }\n      } else if (editMode === \"link\") {\n        if (mouseType === 0) {\n          // left button to select\n          setSelected((prev) => prev.filter((i) => i != id).concat(id))\n        } else if (mouseType === 2) {\n          // right button to unselect\n          setSelected((prev) => prev.filter((i) => i != id))\n        }\n      } else if (editMode === \"move\") {\n        if (mouseType === 0) {\n          // left button to move\n          setSelected((prev) => (prev.length > 0 ? [] : [id]))\n        }\n      }\n    },\n    [editMode, setNodes, setSelected]\n  )\n\n  const onMouseUpPoint = useCallback((evt: any) => {}, [])\n\n  const guideLine = useMemo(\n    (): React.ReactElement => (\n      <>\n        {editMode === \"link\" && selectedNode && cursorPos && (\n          <Polyline\n            key={`edge-guide`}\n            path={[selectedNode, cursorPos].map(({ lat, lng }: NodeType) => ({\n              lat,\n              lng,\n            }))}\n            strokeWeight={3}\n            strokeColor=\"#db4040\"\n            strokeOpacity={1}\n            strokeStyle=\"dashed\"\n          />\n        )}\n      </>\n    ),\n    [editMode, selectedNode, cursorPos]\n  )\n\n  const NodePoints = useCallback((): React.ReactElement => {\n    const { level } = getMapBounds()\n    return (\n      <>\n        {bufNodes.map(\n          ({ key, lat, lng }: NodeType): React.ReactElement => (\n            <CustomOverlayMap\n              position={{\n                lat,\n                lng,\n              }}\n              key={key}\n            >\n              <Point\n                id={key}\n                color={graphColors.get(key)}\n                size={6 / level}\n                selected={isSelected(key)}\n                onMouseDown={onMouseDownPoint}\n                onMouseUp={onMouseUpPoint}\n              />\n            </CustomOverlayMap>\n          )\n        )}\n      </>\n    )\n  }, [\n    bufNodes,\n    graphColors,\n    getMapBounds,\n    isSelected,\n    onMouseDownPoint,\n    onMouseUpPoint,\n  ])\n\n  const EdgeLines = useCallback((): React.ReactElement => {\n    console.log(\"graph colors\", graphColors)\n    return (\n      <>\n        {visibleEdges.map(({ from, to }: EdgeType): React.ReactElement => {\n          const path: Array<any> = [from, to]\n            .map(getNode)\n            .filter((n) => n !== null)\n          if (path.length != 2) {\n            return <></>\n          }\n          return (\n            <Polyline\n              key={`edge-${from}-${to}`}\n              path={path.map(({ lat, lng }: NodeType) => ({\n                lat,\n                lng,\n              }))}\n              strokeWeight={3}\n              strokeColor={graphColors.get(from)}\n              strokeOpacity={1}\n              strokeStyle=\"solid\"\n            />\n          )\n        })}\n      </>\n    )\n  }, [visibleEdges, graphColors, getNode, isNodeVisible])\n\n  const fitMapBound = useCallback(\n    (nodes: NodeType[]) => {\n      if (nodes.length < 1) return\n      const bounds = new kakao.maps.LatLngBounds()\n      nodes.forEach(({ lat, lng }) => {\n        bounds.extend(new kakao.maps.LatLng(lat, lng))\n      })\n      map.setBounds(bounds)\n      setTimeout(() => {\n        map.relayout()\n      }, 0)\n    },\n    [map]\n  )\n\n  const loadGraphFromFile = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const files = evt.target.files\n      if (!files || files.length < 1) {\n        return\n      }\n      const file = files[0]\n      const reader: FileReader = new FileReader()\n      reader.addEventListener(\"load\", (event: any) => {\n        const result = event.target.result\n        try {\n          const { nodes, edges } = JSON.parse(result)\n          const newNodes: Array<NodeType> = nodes.map(\n            ({ id, lat, lng }: any) =>\n              ({\n                key: `node-${id}`,\n                lat,\n                lng,\n              } as NodeType)\n          )\n          setNodes(newNodes)\n          setEdges(\n            edges.map(\n              ({ from, to }: any) =>\n                ({\n                  from: (newNodes[from] as NodeType).key,\n                  to: (newNodes[to] as NodeType).key,\n                } as EdgeType)\n            )\n          )\n          fitMapBound(nodes)\n          // console.log(nodes, edges)\n        } catch {\n          window.alert(\"Failed to parse JSON\")\n        }\n      })\n      reader.readAsText(file)\n    },\n    [setNodes, setEdges]\n  )\n\n  const downloadGraphToFile = useCallback(\n    () => saveGraphFile(nodes, edges),\n    [nodes, edges]\n  )\n\n  return (\n    <>\n      <EdgeLines />\n      {guideLine}\n      <NodePoints />\n      <EditorButtons\n        editMode={editMode || \"add\"}\n        onClickDownload={downloadGraphToFile}\n        onClickUpload={loadGraphFromFile}\n        onModeChanged={setEditMode}\n      />\n    </>\n  )\n}\n\nexport default Editor\n","export const saveFile = (filename: string, blob: Blob) => {\n  const a = document.createElement(\"a\")\n  a.download = filename\n  a.href = URL.createObjectURL(blob)\n  a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\")\n  a.addEventListener(\"click\", (e) => {\n    setTimeout(() => URL.revokeObjectURL(a.href), 30 * 1000)\n  })\n  a.click()\n}\n\nexport const jsonToBlob = (json: object): Blob =>\n  new Blob([JSON.stringify(json, null, 2)], {\n    type: \"application/json\",\n  })\n","import React, { createContext, useState, useContext } from \"react\"\n\nexport interface ContextState<T> {\n  state: T\n  setState: React.Dispatch<React.SetStateAction<ControlState>>\n}\n\nexport interface ControlState {\n  mode: \"view\" | \"edit\"\n  viewSpeed?: number\n  viewRunning?: boolean\n}\n\nconst initialState: ControlState = {\n  mode: \"view\",\n  viewSpeed: 1.0,\n  viewRunning: false,\n}\n\nconst Context: any = createContext<ContextState<ControlState> | undefined>(\n  undefined\n)\n\nexport const ControlProvider = (props: any) => {\n  const [state, setState] = useState<ControlState>(initialState)\n\n  // const setContext = (state: ControlState) => {\n  //   setState((prevState: ControlState) => ({ ...prevState, ...state }))\n  // }\n\n  return (\n    <Context.Provider value={{ state: { ...state }, setState }}>\n      <>{props.children}</>\n    </Context.Provider>\n  )\n}\n\nexport const useControlState = (): [\n  ControlState,\n  React.Dispatch<React.SetStateAction<ControlState>>\n] => {\n  const ctx: ContextState<ControlState> | undefined = useContext(Context)\n  if (ctx === undefined) {\n    throw new Error(\"useControlState should be used within ControlProvider\")\n  }\n  const { state, setState } = ctx\n  return [\n    state as ControlState,\n    setState as React.Dispatch<React.SetStateAction<ControlState>>,\n  ]\n}\n","import React, { useState, useCallback } from \"react\"\n\nimport KakaoMap from \"../../components/KakaoMap\"\nimport HorizontalContainer from \"../../components/HorizontalContainer\"\nimport { Button } from \"@mui/joy\"\nimport Viewer from \"./Viewer\"\nimport Editor from \"./Editor\"\nimport CableIcon from \"@mui/icons-material/Cable\"\nimport LocalTaxiIcon from \"@mui/icons-material/LocalTaxi\"\nimport { useControlState, ControlState } from \"../../providers/ControlProvider\"\n\nimport \"./index.css\"\n\ntype SwitchButtonProps = React.PropsWithChildren & {\n  mode: \"view\" | \"edit\"\n  onChange: (mode: string) => void\n}\n\nconst SwitchButton = ({\n  mode,\n  onChange,\n}: SwitchButtonProps): React.ReactElement => (\n  <>\n    <Button\n      size=\"sm\"\n      startDecorator={<LocalTaxiIcon />}\n      variant={mode === \"view\" ? \"solid\" : \"plain\"}\n      onClick={() => onChange(\"view\")}\n      sx={{\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n      }}\n    >\n      Viewer\n    </Button>\n    <Button\n      size=\"sm\"\n      startDecorator={<CableIcon />}\n      variant={mode === \"edit\" ? \"solid\" : \"plain\"}\n      onClick={() => onChange(\"edit\")}\n      sx={{\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n      }}\n    >\n      Editor\n    </Button>\n  </>\n)\n\nexport default function Map() {\n  const [controls, setControls] = useControlState()\n\n  const latitude = 37.52897\n  const longitude = 126.917101\n  const [level, setLevel] = useState<number>(3)\n\n  const SwitchButtonControlled = useCallback(\n    (): React.ReactElement => (\n      <HorizontalContainer\n        position=\"top\"\n        gap={0}\n        style={{\n          padding: 0,\n          height: \"auto\",\n        }}\n      >\n        <SwitchButton\n          mode={controls.mode}\n          onChange={(mode: string) => {\n            setControls((prev) => ({ ...prev, mode } as ControlState))\n          }}\n        />\n      </HorizontalContainer>\n    ),\n    [(controls as ControlState).mode, setControls]\n  )\n\n  return (\n    <>\n      <KakaoMap\n        center={{\n          lat: latitude,\n          lng: longitude,\n        }}\n        level={level}\n        onZoomChanged={(map) => setLevel(map.getLevel())}\n        style={{\n          width: \"100%\",\n          height: \"100vh\",\n          zIndex: 0,\n        }}\n      >\n        <SwitchButtonControlled />\n        {controls.mode == \"view\" ? <Viewer /> : <Editor />}\n      </KakaoMap>\n    </>\n  )\n}\n","import React from \"react\"\nimport Map from \"./Map\"\nimport { ControlProvider } from \"../providers/ControlProvider\"\nimport { StatusProvider } from \"../providers/StatusProvider\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StatusProvider>\n        <ControlProvider>\n          <Map />\n        </ControlProvider>\n      </StatusProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom/client\"\nimport \"./index.css\"\nimport App from \"./pages/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement)\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}