{"version":3,"sources":["components/KakaoMap/MapLoader.tsx","components/KakaoMap/index.tsx","components/HorizontalContainer.tsx","components/Dot.tsx","components/Aside.tsx","providers/StatusProvider.tsx","components/IconButton.tsx","pages/Map/Controls/ViewerButtons.tsx","pages/Map/Viewer.tsx","helpers/stringFormat.ts","components/Point.tsx","pages/Map/Controls/EditorButtons.tsx","pages/Map/Editor.tsx","helpers/fileInteracts.ts","providers/ControlProvider.tsx","pages/Map/index.tsx","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dimmer","styled","div","_templateObject","_taggedTemplateLiteral","MapLoader","props","_useInjectKakaoMapApi","useInjectKakaoMapApi","appkey","process","libraries","retries","loading","error","React","createElement","Fragment","Map","ContainerStyled","_ref","position","css","_templateObject2","_templateObject3","ContentStyled","_templateObject4","_ref2","gap","concat","Divider","MUIDivider","orientation","HorizontalContainer","_ref3","_ref3$gap","_ref3$style","style","children","paddleAnimation","keyframes","Circle","color","size","animate","Container","Dot","_ref3$color","_ref3$size","className","ContainerWrapper","fold","FoldButtonContainerStyled","FoldButtonStyled","_templateObject5","ref","_useState","useState","_useState2","_slicedToArray","setFold","ArrowIcon","useCallback","KeyboardDoubleArrowRightIcon","KeyboardDoubleArrowLeftIcon","onClick","evt","prev","Aside","forwardRef","initialState","currentTime","logs","Context","createContext","undefined","StatusProvider","state","setState","Provider","value","_objectSpread","IconButton","_ref$tooltip","tooltip","_ref$tooltipColor","tooltipColor","_ref$tooltipPlacement","tooltipPlacement","_ref$tooltipSize","tooltipSize","active","_ref$disabled","disabled","_ref$loading","_ref$variant","variant","MuiTooltip","arrow","title","placement","MuiIconButton","sx","--IconButton-size","CircularProgress","MenuButton","_ref$active","icon","PlaySpeedButton","speed","onSelectSpeed","_React$useState","_React$useState2","anchorEl","setAnchorEl","isOpen","Boolean","close","Item","item","MenuItem","Object","assign","selected","select","toFixed","event","currentTarget","SlowMotionVideoIcon","Menu","open","onClose","SliderWrapperStyled","ViewerButtons","running","runable","progressMax","progressCurrent","onProgressUpdated","onClickPlay","onClickUpload","PlayControlButton","PauseIcon","PlayArrowIcon","UploadButton","useRef","htmlFor","width","display","id","name","type","accept","onChange","UploadIcon","current","click","Slider","aria-label","defaultValue","min","max","step","valueLabelDisplay","console","log","marginLeft","MarkerType","LogIcon","backgroundColor","justifyItems","alignItems","height","borderRadius","VehicleLogInfoStyled","RoadLineStyled","Icon","_ref2$style","iconStyle","fill","marginTop","LocalTaxiIcon","HailIcon","KeyboardDoubleArrowDownIcon","LogInfoStyled","get_slope_weight","x1","y1","x2","y2","cx","cy","lx","Math","abs","ly","dx","dy","r","sqrt","Viewer","markerPositions","setMarkerPositions","_useStatusState","ctx","useContext","Error","useStatusState","_useStatusState2","status","setStatus","_useState3","_useState4","level","setLevel","_useState5","_useState6","setRunable","_useState7","_useState8","setRunning","_useState9","_useState10","setSpeed","_useState11","_useState12","setProgressMax","_useState13","_useState14","setProgressCurrent","_useState15","_useState16","allColors","setColors","useEffect","length","map","useMap","getLevel","displayTimeAt","t","_logs$t","vehicles","time","tasks","vMarkers","Array","from","_ref5","lat","lng","key","tMarkers","_ref6","pick_lat","pick_lng","drop_lat","drop_lng","flat","filter","_toConsumableArray","interval","DEFAULT_TIMESTEP","timer","setTimeout","clearTimeout","fitMapBound","nodes","bounds","kakao","maps","LatLngBounds","forEach","_ref7","extend","LatLng","setBounds","positions","_ref8","_vehicles$map","_ref9","apply","_ref10","nameKeyValueMap","Set","_ref11","_ref12","_ref13","_defineProperty","random","toString","slice","reduce","previousValue","currentValue","sidePanelRef","scrollTo","top","scrollHeight","behavior","LogInfo","_ref15","colors","_ref16","allocated_id","_ref17","task","_ref18","_ref19","isPicked","isDroped","IconReadyStyle","borderWidth","borderColor","borderStyle","IconReadyInnerStyle","justifySelf","margin","left","zIndex","_useState17","_useState18","subLogs","setSubLogs","sliced","StateViewer","_ref20","Typography","fontSize","date","options","timeZone","dateString","Intl","DateTimeFormat","dateStyle","format","dayPeriod","_timeFormat$split$1$s","hour","minute","second","hour12","split","_timeFormat$split$1$s2","join","humanizeDate","Date","_ref21","CustomOverlayMap","cc","parentElement","files","target","file","reader","FileReader","addEventListener","result","JSON","parse","_unused","window","alert","readAsText","Stack","spacing","Point","_ref4","_ref4$size","_ref4$selected","onMouseEnter","onMouseDown","onMouseLeave","onMouseUp","data-id","EditorButtons","editMode","onModeChanged","onClickDownload","onSelectMode","mode","ModeButtons","GrainIcon","PolylineIcon","OpenWithIcon","DownloadButton","DownloadIcon","saveGraphFile","edges","json","keys","keyToIndex","indexOf","transformed","info","to","filename","blob","a","document","download","href","URL","createObjectURL","dataset","downloadurl","e","revokeObjectURL","saveFile","toISOString","Blob","stringify","Editor","setNodes","setEdges","setEditMode","setSelected","cursorPos","setCursorPos","isSelected","selectedNode","useMemo","node","getNode","hasNode","_selected","fromID","toID","edge","createEdge","onMapClick","loc","latLng","getLat","getLng","nodeId","onMapMouseUp","onMapMouseMove","setCursor","addListener","removeListener","onMouseDownPoint","closest","getAttribute","mouseType","button","i","onMouseUpPoint","GuideLine","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","NodePoints","EdgeLines","n","onCreate","loadGraphFromFile","_JSON$parse","newNodes","_ref14","downloadGraphToFile","viewSpeed","viewRunning","ControlProvider","useControlState","SwitchButton","Button","startDecorator","borderTopRightRadius","borderBottomRightRadius","CableIcon","borderTopLeftRadius","borderBottomLeftRadius","_useControlState","_useControlState2","controls","setControls","SwitchButtonControlled","padding","KakaoMap","center","onZoomChanged","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.7ec29ad6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport KakaoMapSDK, {\n  Map,\n  useInjectKakaoMapApi,\n  useMap,\n} from \"react-kakao-maps-sdk\"\nimport styled from \"styled-components\"\n\ntype MapProps = KakaoMapSDK.MapProps & {\n  style?: React.CSSProperties\n}\n\nconst Dimmer = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgb(0, 0, 0, 0.5);\n  backdrop-filter: blur(5px);\n`\n\nexport default function MapLoader(props: MapProps): React.ReactElement {\n  const { loading, error } = useInjectKakaoMapApi({\n    appkey: process.env.REACT_APP_KAKAO_MAP_API_KEY as string,\n    libraries: [\"services\", \"clusterer\"],\n    retries: 3,\n  })\n  return (\n    <>\n      {loading || error ? (\n        <Dimmer />\n      ) : (\n        <Map {...(props as KakaoMapSDK.MapProps)} />\n      )}\n    </>\n  )\n}\n","import MapLoader from \"./MapLoader\"\n\nexport default MapLoader\n","import React from \"react\"\nimport MUIDivider from \"@mui/joy/Divider\"\nimport styled, { css } from \"styled-components\"\n\nconst ContainerStyled = styled.div<{ position: \"top\" | \"bottom\" }>`\n  position: absolute;\n  display: flex;\n  left: calc(0px + 50%);\n  translate: -50% 0%;\n  margin: 0 auto;\n  width: fit-content;\n  height: 42px;\n  place-items: center;\n  padding: 6px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 1em;\n  box-sizing: border-box;\n\n  ${({ position }: any) =>\n    position == \"top\"\n      ? css`\n          top: 1rem;\n        `\n      : css`\n          bottom: 1rem;\n        `}\n`\n\nconst ContentStyled = styled.div<{ gap: number }>`\n  display: flex;\n  flex-direction: row;\n  gap: ${({ gap }: any) => `${gap}rem`};\n  margin: 0px auto;\n  place-items: center;\n  box-sizing: border-box;\n`\n\ntype ContainerProps = React.PropsWithChildren & {\n  position: \"top\" | \"bottom\"\n  gap?: number\n  style?: React.CSSProperties\n}\n\nconst HorizontalContainer = ({\n  position,\n  gap = 0.5,\n  style = {},\n  children,\n}: ContainerProps): React.ReactElement => (\n  <ContainerStyled position={position} style={style}>\n    <ContentStyled gap={gap}>{children}</ContentStyled>\n  </ContainerStyled>\n)\n\nexport const Divider = (): React.ReactElement => (\n  <MUIDivider orientation=\"vertical\" />\n)\n\nexport default HorizontalContainer\n","import React from \"react\"\nimport styled, { css, keyframes } from \"styled-components\"\n\nconst paddleAnimation = keyframes`\n  from {\n    transform: scale(1.0);\n    opacity: 1.0;\n  }\n  to {\n    transform: scale(2.0);\n    opacity: 0.0;\n  }\n`\n\ntype CircleStyleProps = {\n  size: number\n  color: string\n  animate?: boolean\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Circle = styled.div`\n  position: absolute;\n  display: flex;\n  width: 1em;\n  height: 1em;\n  background: ${({ color }: CircleStyleProps) => color};\n  border-radius: 8rem;\n  align-items: center;\n  justify-content: center;\n  scale: ${({ size }: CircleStyleProps) => size};\n\n  ${(props: CircleStyleProps) =>\n    props.animate &&\n    css`\n      animation: ${paddleAnimation} 1s ease-in-out infinite;\n    `};\n\n  > .icon {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype DotProps = {\n  color?: string\n  size?: number\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Dot = ({ color = \"dodgerblue\", size = 2, children }: DotProps) => {\n  return (\n    <Container>\n      <Circle color={color} size={size} animate={true} />\n      <Circle color={color} size={size}>\n        <div className=\"icon\">{children}</div>\n      </Circle>\n    </Container>\n  )\n}\n\nexport default Dot\n","import React, { useState, useCallback, PropsWithChildren } from \"react\"\n\nimport styled, { css, keyframes } from \"styled-components\"\n\nimport KeyboardDoubleArrowLeftIcon from \"@mui/icons-material/KeyboardDoubleArrowLeft\"\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\"\n\nconst ContainerWrapper = styled.div<{ fold: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  max-width: 280px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  transition: transform 400ms cubic-bezier(0.65, 0.05, 0.36, 1);\n  z-index: 99999;\n\n  ${({ fold }: any) =>\n    fold &&\n    css`\n      transform: translateX(-100%);\n    `}\n`\n\nconst ContainerStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n  border: 0;\n  border-radius: 0;\n  outline: 0;\n  margin: 0;\n  padding: 1em 2em;\n  box-sizing: border-box;\n  box-shadow: 0 0 1em rgba(128, 128, 128, 0.5);\n  overflow-y: auto;\n`\n\nconst FoldButtonContainerStyled = styled.div`\n  position: absolute;\n  display: flex;\n  width: 1.25em;\n  height: 100%;\n  right: -1.25em;\n  justify-content: center;\n  align-items: center;\n`\n\nconst FoldButtonStyled = styled.div`\n  width: 100%;\n  height: 3em;\n  display: flex;\n  padding-right: 0.25em;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  background-color: #ffffff;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  clip-path: inset(-1em -1em -1em 0px);\n  box-shadow: 0 0 1em rgba(128, 128, 128, 0.5);\n  cursor: pointer;\n`\n\ntype ContainerProps = {\n  _ref: React.ForwardedRef<any>\n  children?: React.ReactNode\n}\n\nconst Container = ({\n  _ref: ref,\n  children,\n}: ContainerProps): React.ReactElement => {\n  const [fold, setFold] = useState<boolean>(true)\n  const ArrowIcon = useCallback(() => {\n    const props = {\n      sx: {\n        width: \"100%\",\n      },\n    }\n    return fold ? (\n      <KeyboardDoubleArrowRightIcon />\n    ) : (\n      <KeyboardDoubleArrowLeftIcon />\n    )\n  }, [fold])\n  return (\n    <ContainerWrapper fold={fold}>\n      <ContainerStyled ref={ref}>\n        <>{children}</>\n      </ContainerStyled>\n      <FoldButtonContainerStyled>\n        <FoldButtonStyled\n          onClick={(evt) => {\n            setFold((prev) => !prev)\n          }}\n        >\n          <ArrowIcon />\n        </FoldButtonStyled>\n      </FoldButtonContainerStyled>\n    </ContainerWrapper>\n  )\n}\n\nconst Aside = React.forwardRef((props: PropsWithChildren, ref) => (\n  <Container _ref={ref}>\n    <>{props.children}</>\n  </Container>\n))\n\nexport default Aside\n","import React, { createContext, useState, useContext } from \"react\"\n\nexport interface ContextState<T> {\n  state: T\n  setState: React.Dispatch<React.SetStateAction<T>>\n}\n\nexport interface StatusState {\n  currentTime: number | null\n  logs: Array<any>\n}\n\nconst initialState: StatusState = {\n  currentTime: null,\n  logs: [],\n}\n\nconst Context: any = createContext<ContextState<StatusState> | undefined>(\n  undefined\n)\n\nexport const StatusProvider = (props: any) => {\n  const [state, setState] = useState<StatusState>(initialState)\n\n  return (\n    <Context.Provider value={{ state: { ...state }, setState }}>\n      <>{props.children}</>\n    </Context.Provider>\n  )\n}\n\nexport const useStatusState = (): [\n  StatusState,\n  React.Dispatch<React.SetStateAction<StatusState>>\n] => {\n  const ctx: ContextState<StatusState> | undefined = useContext(Context)\n  if (ctx === undefined) {\n    throw new Error(\"useStatusState should be used within StatusProvider\")\n  }\n  const { state, setState } = ctx\n  return [\n    state as StatusState,\n    setState as React.Dispatch<React.SetStateAction<StatusState>>,\n  ]\n}\n","import React, { useCallback } from \"react\"\n\nimport MuiIconButton from \"@mui/joy/IconButton\"\nimport MuiTooltip from \"@mui/joy/Tooltip\"\nimport CircularProgress from \"@mui/joy/CircularProgress\"\n\ntype IconButtonProps = React.PropsWithChildren & {\n  tooltip?: React.ReactNode\n  tooltipColor:\n    | \"primary\"\n    | \"neutral\"\n    | \"danger\"\n    | \"info\"\n    | \"success\"\n    | \"warning\"\n  tooltipPlacement?:\n    | \"bottom\"\n    | \"left\"\n    | \"right\"\n    | \"top\"\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"top-end\"\n    | \"top-start\"\n  tooltipSize?: \"sm\" | \"md\" | \"lg\"\n  active: boolean\n  disabled?: boolean\n  loading?: boolean\n  variant?: \"plain\" | \"outlined\" | \"soft\" | \"solid\"\n  size: string\n  onClick: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst IconButton = ({\n  tooltip = undefined,\n  tooltipColor = \"primary\",\n  tooltipPlacement = \"bottom\",\n  tooltipSize = \"sm\",\n  active,\n  disabled = false,\n  loading = false,\n  variant = \"plain\",\n  size,\n  onClick,\n  children,\n}: IconButtonProps) => {\n  return (\n    <MuiTooltip\n      arrow\n      title={tooltip}\n      color={tooltipColor}\n      placement={tooltipPlacement}\n      size={tooltipSize}\n      variant={variant}\n    >\n      <MuiIconButton\n        variant={active ? \"solid\" : \"soft\"}\n        sx={{\n          \"--IconButton-size\": size,\n        }}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {loading ? (\n          <CircularProgress\n            color=\"primary\"\n            size=\"sm\"\n            value={33}\n            variant=\"plain\"\n          />\n        ) : (\n          children\n        )}\n      </MuiIconButton>\n    </MuiTooltip>\n  )\n}\n\nexport default IconButton\n","import React, { useState, useCallback, useRef } from \"react\"\n\nimport { Slider, Menu, MenuItem } from \"@mui/joy\"\nimport UploadIcon from \"@mui/icons-material/Upload\"\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\nimport PauseIcon from \"@mui/icons-material/Pause\"\n\nimport IconButton from \"../../../components/IconButton\"\nimport SlowMotionVideoIcon from \"@mui/icons-material/SlowMotionVideo\"\nimport HorizontalContainer, {\n  Divider,\n} from \"../../../components/HorizontalContainer\"\nimport styled from \"styled-components\"\n\ntype MenuButtonProps = {\n  title?: string\n  active?: boolean\n  disabled?: boolean\n  loading?: boolean\n  icon: React.ReactElement\n  onClick: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst MenuButton = ({\n  title,\n  active = false,\n  disabled = false,\n  loading = false,\n  icon,\n  onClick,\n}: MenuButtonProps) => {\n  return (\n    <IconButton\n      tooltip={title}\n      tooltipColor=\"primary\"\n      tooltipPlacement=\"top\"\n      active={active}\n      disabled={disabled}\n      loading={loading}\n      variant=\"outlined\"\n      size={\"32px\"}\n      onClick={onClick}\n    >\n      {icon}\n    </IconButton>\n  )\n}\n\ntype SpeedControlProps = {\n  speed: number\n  onSelectSpeed: (speed: number) => void\n}\n\nconst PlaySpeedButton = ({\n  speed,\n  onSelectSpeed,\n}: SpeedControlProps): React.ReactElement => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const isOpen = Boolean(anchorEl)\n  const handleClick = (event: React.SyntheticEvent<any>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const close = () => {\n    setAnchorEl(null)\n  }\n  const select = (item: number) => {\n    onSelectSpeed(item)\n    close()\n  }\n\n  const Item = useCallback(\n    (item: number): React.ReactElement => (\n      <MenuItem\n        {...(speed === item && { selected: true, variant: \"soft\" })}\n        onClick={() => select(item)}\n      >\n        x{item.toFixed(1)}\n      </MenuItem>\n    ),\n    [speed]\n  )\n\n  return (\n    <div>\n      <MenuButton\n        title={isOpen ? undefined : \"재생 속도\"}\n        onClick={handleClick}\n        icon={<SlowMotionVideoIcon />}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={isOpen}\n        onClose={close}\n        color=\"primary\"\n        size=\"sm\"\n        variant=\"plain\"\n      >\n        {Item(1.0)}\n        {Item(2.0)}\n        {Item(5.0)}\n        {Item(10.0)}\n      </Menu>\n    </div>\n  )\n}\n\nconst SliderWrapperStyled = styled.div`\n  width: calc(100vw - 600px);\n  width: calc(100svw - 600px);\n  max-width: 480px;\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  box-sizing: border-box;\n`\n\ntype ViewerButtonsProps = {\n  running: boolean\n  runable: boolean\n  progressMax: number\n  progressCurrent: number\n  onProgressUpdated: (progress: number) => void\n  onClickPlay: () => void\n  onClickUpload: (event: React.ChangeEvent<HTMLInputElement>) => void\n} & SpeedControlProps\n\nconst ViewerButtons = ({\n  running,\n  runable,\n  progressMax,\n  progressCurrent,\n  speed,\n  onSelectSpeed,\n  onProgressUpdated,\n  onClickPlay,\n  onClickUpload,\n}: ViewerButtonsProps): React.ReactElement => {\n  const PlayControlButton = useCallback((): React.ReactElement => {\n    return running ? (\n      <MenuButton title=\"일시정지\" onClick={onClickPlay} icon={<PauseIcon />} />\n    ) : (\n      <MenuButton\n        title=\"재생\"\n        disabled={!runable}\n        onClick={onClickPlay}\n        icon={<PlayArrowIcon />}\n      />\n    )\n  }, [running, runable])\n\n  const UploadButton = useCallback((): React.ReactElement => {\n    const ref = useRef<HTMLInputElement>(null)\n    return (\n      <>\n        <label\n          htmlFor=\"upload-log\"\n          style={{\n            width: \"32px\",\n          }}\n        >\n          <input\n            ref={ref}\n            style={{ display: \"none\" }}\n            id=\"upload-log\"\n            name=\"upload-log\"\n            type=\"file\"\n            accept=\".json,application/json\"\n            onChange={onClickUpload}\n          />\n          <MenuButton\n            title=\"업로드\"\n            icon={<UploadIcon />}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.click()\n              }\n            }}\n          />\n        </label>\n      </>\n    )\n  }, [onClickUpload])\n\n  return (\n    <>\n      <HorizontalContainer position=\"bottom\">\n        <UploadButton />\n        <PlayControlButton />\n        <PlaySpeedButton speed={speed} onSelectSpeed={onSelectSpeed} />\n        <Divider />\n        <SliderWrapperStyled>\n          <Slider\n            color=\"primary\"\n            aria-label=\"Timestamp\"\n            defaultValue={0}\n            value={progressCurrent}\n            min={0}\n            max={progressMax}\n            step={1}\n            disabled={!runable || running}\n            size=\"md\"\n            valueLabelDisplay=\"off\"\n            variant=\"solid\"\n            onChange={(\n              event: React.SyntheticEvent | Event,\n              value: number | number[]\n            ) => {\n              console.log(\"new value\", value)\n              if (typeof value === \"number\") {\n                onProgressUpdated(value)\n              } else {\n                onProgressUpdated(value[0])\n              }\n            }}\n            style={{\n              width: \"calc(100% - 0.5rem)\",\n              marginLeft: \"0.5rem\",\n            }}\n          />\n        </SliderWrapperStyled>\n      </HorizontalContainer>\n    </>\n  )\n}\n\nexport default ViewerButtons\n","/* global kakao */\n\nimport React, {\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  CSSProperties,\n} from \"react\"\n\nimport Dot from \"../../components/Dot\"\nimport Aside from \"../../components/Aside\"\n\nimport LocalTaxiIcon from \"@mui/icons-material/LocalTaxi\"\nimport HailIcon from \"@mui/icons-material/Hail\"\nimport KeyboardDoubleArrowDownIcon from \"@mui/icons-material/KeyboardDoubleArrowDown\"\nimport { Divider, Stack, Typography } from \"@mui/joy\"\n\nimport { CustomOverlayMap, useMap } from \"react-kakao-maps-sdk\"\n\nimport { useStatusState, StatusState } from \"../../providers/StatusProvider\"\nimport ViewerButtons from \"./Controls/ViewerButtons\"\nimport { humanizeDate } from \"../../helpers/stringFormat\"\nimport styled from \"styled-components\"\n\nconst MarkerType = {\n  NONE: -1,\n  VEHICLE: 0,\n  PERSON_PICK: 1,\n  PERSON_DROP: 2,\n}\n\ntype MarkerPosition = {\n  key: string | null\n  color?: string\n  size: number\n  lat: number\n  lng: number\n  type: number\n}\n\ninterface ColorName {\n  [key: string]: string\n}\n\nconst randomColor = () => \"#\" + Math.random().toString(16).slice(-6)\n\ntype TaskType = {\n  id: number\n  drop_lat: number\n  drop_lng: number\n  pick_lat: number\n  pick_lng: number\n  status: number\n  time: number\n}\n\nconst LogIcon = ({ color, style, children }: any): React.ReactElement => (\n  <div\n    style={{\n      backgroundColor: color || \"black\",\n      display: \"flex\",\n      justifyItems: \"center\",\n      alignItems: \"center\",\n      width: \"32px\",\n      height: \"32px\",\n      borderRadius: \"6rem\",\n      ...style,\n    }}\n  >\n    <>{children}</>\n  </div>\n)\n\nconst VehicleLogInfoStyled = styled.div`\n  width: calc(100% - 12px);\n  position: relative;\n  box-sizing: border-box;\n  padding: 0 6px;\n  display: flex;\n  align-items: center;\n`\n\nconst RoadLineStyled = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 3px;\n  background-color: #efefef;\n  border-radius: 1em;\n  z-index: 0;\n`\n\ntype DisplayIconProps = {\n  type: number\n  style?: CSSProperties\n}\n\nconst Icon = ({ type, style = {} }: DisplayIconProps): any => {\n  const iconStyle = {\n    fill: \"white\",\n    marginTop: \"-1px\",\n    width: \"75%\",\n    ...style,\n  }\n  if (type == MarkerType.NONE) {\n    return <></>\n  } else if (type == MarkerType.VEHICLE) {\n    return <LocalTaxiIcon style={iconStyle} />\n  } else if (type == MarkerType.PERSON_PICK) {\n    return <HailIcon style={iconStyle} />\n  } else if (type == MarkerType.PERSON_DROP) {\n    return <KeyboardDoubleArrowDownIcon style={iconStyle} />\n  }\n}\n\nconst LogInfoStyled = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  padding: 0.5rem 0;\n`\n\nconst get_slope_weight = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  cx: number,\n  cy: number\n) => {\n  const lx = Math.abs(x2 - x1)\n  const ly = Math.abs(y2 - y1)\n  const dx = cx - x1\n  const dy = cy - y1\n  const r = Math.sqrt(dx * dx + dy * dy) / Math.sqrt(lx * lx + ly * ly)\n  return Math.max(0.0, Math.min(r * 100.0, 100.0))\n}\n\nconst Viewer = (): React.ReactElement => {\n  const [markerPositions, setMarkerPositions] = useState<Array<MarkerPosition>>(\n    []\n  )\n  const [status, setStatus] = useStatusState()\n  const [level, setLevel] = useState<number>(3)\n  const [runable, setRunable] = useState<boolean>(false)\n  const [running, setRunning] = useState<boolean>(false)\n  const [speed, setSpeed] = useState<number>(1.0)\n  const [progressMax, setProgressMax] = useState<number>(0)\n  const [progressCurrent, setProgressCurrent] = useState<number>(0)\n  const [allColors, setColors] = useState<ColorName>({})\n\n  useEffect(() => {\n    const { logs } = status as StatusState\n    setRunable(logs && logs.length > 0)\n  }, [status])\n\n  const map = useMap()\n\n  useEffect(() => {\n    setLevel(map.getLevel())\n  }, [map])\n\n  const { logs } = status as StatusState\n\n  const displayTimeAt = useCallback(\n    (t: number) => {\n      if (!logs || t >= logs.length) return\n\n      const { time, vehicles, tasks } = logs[t]\n\n      const vMarkers: Array<MarkerPosition> = Array.from(vehicles || []).map(\n        ({ name, lat, lng }: any) => ({\n          key: name,\n          color: allColors[name],\n          size: 5,\n          lat,\n          lng,\n          type: MarkerType.VEHICLE,\n        })\n      )\n\n      const tMarkers: Array<MarkerPosition> = Array.from(tasks || [])\n        .map(\n          ({\n            id,\n            pick_lat,\n            pick_lng,\n            drop_lat,\n            drop_lng,\n            status,\n          }: any): any[] => [\n            0 <= status && status <= 5\n              ? {\n                  key: `task-${id}-pick`,\n                  color: allColors[id],\n                  size: 4,\n                  lat: pick_lat,\n                  lng: pick_lng,\n                  type: MarkerType.PERSON_PICK,\n                }\n              : null,\n            {\n              key: `task-${id}-drop`,\n              color: allColors[id],\n              size: 4,\n              lat: drop_lat,\n              lng: drop_lng,\n              type: MarkerType.PERSON_DROP,\n            },\n          ]\n        )\n        .flat()\n        .filter((value) => value !== null)\n\n      setMarkerPositions([...vMarkers, ...tMarkers])\n    },\n    [logs, allColors]\n  )\n\n  useEffect(() => {\n    displayTimeAt(progressCurrent)\n  }, [progressCurrent])\n\n  useEffect(() => {\n    if (!running) return\n\n    // 1 frame contains 60 secs\n    const DEFAULT_TIMESTEP = 60 * 1000\n    // 1 frame / 1000 ms\n    const interval = DEFAULT_TIMESTEP / 60 / (speed || 1.0)\n    console.log(\"info\", interval, running, speed)\n\n    const timer = setTimeout(() => {\n      setProgressCurrent((prev) => prev + 1)\n    }, interval)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [running, speed, progressCurrent])\n\n  const fitMapBound = useCallback(\n    (nodes: Array<{ lat: number; lng: number }>) => {\n      if (nodes.length < 1) return\n      const bounds = new kakao.maps.LatLngBounds()\n      nodes.forEach(({ lat, lng }) => {\n        bounds.extend(new kakao.maps.LatLng(lat, lng))\n      })\n      map.setBounds(bounds)\n    },\n    [map]\n  )\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n\n    const positions = logs\n      .map(({ vehicles, tasks }: any) =>\n        vehicles\n          .map(({ lat, lng }: any) => ({ lat, lng }))\n          .concat(\n            ...tasks.map(\n              ({ pick_lat, pick_lng, drop_lat, drop_lng }: TaskType) => [\n                {\n                  lat: pick_lat,\n                  lng: pick_lng,\n                },\n                {\n                  lat: drop_lat,\n                  lng: drop_lng,\n                },\n              ]\n            )\n          )\n      )\n      .flat()\n\n    setProgressMax(logs.length - 1)\n    fitMapBound(positions)\n    displayTimeAt(0)\n  }, [logs, fitMapBound, displayTimeAt])\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n\n    // collect and create pairs of name and color\n    const nameKeyValueMap: ColorName = [\n      ...Array.from(\n        new Set<string>(\n          logs\n            .map(({ vehicles, tasks }: any) =>\n              vehicles\n                .map(({ name }: any) => `${name}`)\n                .concat(tasks.map(({ id }: any) => `${id}`))\n            )\n            .flat()\n        )\n      ),\n    ]\n      .map((name: string) => ({\n        [name]: randomColor(),\n      }))\n      .reduce(\n        (\n          previousValue: { [x: string]: string },\n          currentValue: { [x: string]: string }\n        ) => ({\n          ...previousValue,\n          ...currentValue,\n        }),\n        {}\n      )\n\n    setColors(nameKeyValueMap)\n  }, [logs])\n\n  const loadLogFromFile = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const files = evt.target.files\n    if (!files || files.length < 1) {\n      return\n    }\n    const file = files[0]\n    const reader: FileReader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const result = event.target.result\n      try {\n        const { logs } = JSON.parse(result)\n        setStatus((prev) => ({ ...prev, logs }))\n      } catch {\n        window.alert(\"Wrong JSON file format\")\n      }\n    })\n    reader.readAsText(file)\n  }\n\n  const sidePanelRef = useRef(null)\n\n  useEffect(() => {\n    if (!sidePanelRef || !sidePanelRef.current) return\n    const div: HTMLDivElement = sidePanelRef.current\n    setTimeout(() => {\n      div.scrollTo({ top: div.scrollHeight, behavior: \"smooth\" })\n    }, 100)\n  }, [sidePanelRef, progressCurrent])\n\n  const LogInfo = useCallback(({ time, vehicles, tasks, colors }: any) => {\n    return (\n      <>\n        {vehicles\n          .filter(({ allocated_id }: any) => allocated_id != null)\n          .map(({ name, lat, lng, allocated_id }: any) => {\n            const task = Array.from(tasks || []).filter(\n              ({ id }: any) => id === allocated_id\n            )\n            if (task.length < 1) return null\n            const {\n              id,\n              status,\n              pick_lat,\n              pick_lng,\n              drop_lat,\n              drop_lng,\n            }: TaskType = task[0] as TaskType\n\n            const isPicked = status > 5\n            const isDroped = status > 6\n\n            const IconReadyStyle = {\n              backgroundColor: \"transparent\",\n              borderWidth: \"1px\",\n              borderColor: colors[id],\n              borderStyle: \"dashed\",\n            }\n\n            const IconReadyInnerStyle = {\n              fill: colors[id],\n            }\n\n            return (\n              <LogInfoStyled className=\"pairs\" key={`pair-of-${time}-${id}`}>\n                <LogIcon\n                  color={status <= 5 ? \"transparent\" : colors[id]}\n                  style={{\n                    justifySelf: \"flex-start\",\n                    ...(isPicked ? {} : IconReadyStyle),\n                  }}\n                >\n                  <Icon\n                    type={MarkerType.PERSON_PICK}\n                    style={{\n                      margin: \"0 auto\",\n                      ...(isPicked ? {} : IconReadyInnerStyle),\n                    }}\n                  />\n                </LogIcon>\n                <VehicleLogInfoStyled>\n                  <RoadLineStyled\n                    style={isPicked ? { backgroundColor: colors[id] } : {}}\n                  />\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      width: \"calc(100% - 32px)\",\n                      top: 0,\n                    }}\n                  >\n                    <LogIcon\n                      color={colors[name]}\n                      style={{\n                        position: \"absolute\",\n                        left: `${get_slope_weight(\n                          pick_lat,\n                          pick_lng,\n                          drop_lat,\n                          drop_lng,\n                          lat,\n                          lng\n                        )}%`,\n                        zIndex: 1,\n                      }}\n                    >\n                      <Icon\n                        type={MarkerType.VEHICLE}\n                        style={{\n                          margin: \"0 auto\",\n                        }}\n                      />\n                    </LogIcon>\n                  </div>\n                </VehicleLogInfoStyled>\n                <LogIcon\n                  color={colors[id]}\n                  style={{\n                    justifySelf: \"flex-end\",\n                    ...(isDroped ? {} : IconReadyStyle),\n                  }}\n                >\n                  <Icon\n                    type={MarkerType.PERSON_DROP}\n                    style={{\n                      margin: \"0 auto\",\n                      ...(isDroped ? {} : IconReadyInnerStyle),\n                    }}\n                  />\n                </LogIcon>\n              </LogInfoStyled>\n            )\n          })}\n      </>\n    )\n  }, [])\n\n  const [subLogs, setSubLogs] = useState<Array<any>>([])\n\n  useEffect(() => {\n    if (!logs || logs.length < 1) return\n    const sliced: Array<{\n      time: number\n      vehicles: Array<any>\n      tasks: Array<any>\n    }> = logs.slice(0, progressCurrent + 1)\n    setSubLogs(sliced)\n  }, [logs, progressCurrent])\n\n  const StateViewer = useCallback((): React.ReactElement => {\n    return (\n      <>\n        {subLogs.map(({ time, vehicles, tasks }) => (\n          <div key={`log-${time}`}>\n            <Divider>\n              <Typography color=\"neutral\" fontSize={2}>\n                {humanizeDate(new Date(time))}\n              </Typography>\n            </Divider>\n            <LogInfo\n              time={time}\n              vehicles={vehicles}\n              tasks={tasks}\n              colors={allColors}\n            />\n          </div>\n        ))}\n      </>\n    )\n  }, [subLogs, allColors])\n\n  return (\n    <>\n      {markerPositions.map(\n        ({ key, color, size, lat, lng, type }: MarkerPosition) => (\n          <CustomOverlayMap\n            key={key}\n            position={{\n              lat,\n              lng,\n            }}\n            ref={(ref: any) => {\n              if (ref == null) return\n              const parentNode = ref.cc.parentElement\n              parentNode.className = \"vehicle-marker\"\n            }}\n          >\n            <Dot color={color || \"dodgerblue\"} size={size / level}>\n              <Icon type={type as number} />\n            </Dot>\n          </CustomOverlayMap>\n        )\n      )}\n      <ViewerButtons\n        running={running}\n        runable={runable}\n        progressMax={progressMax}\n        progressCurrent={progressCurrent}\n        speed={speed}\n        onSelectSpeed={setSpeed}\n        onProgressUpdated={setProgressCurrent}\n        onClickPlay={() => setRunning(!running)}\n        onClickUpload={loadLogFromFile}\n      />\n\n      <Aside ref={sidePanelRef}>\n        <Stack spacing={1}>\n          <StateViewer />\n        </Stack>\n      </Aside>\n    </>\n  )\n}\n\nexport default Viewer\n","export const humanizeDate = (date: Date): string => {\n  const options = {\n    timeZone: \"Asia/Seoul\",\n  }\n  const dateString: string = new Intl.DateTimeFormat(\"ko-kr\", {\n    dateStyle: \"full\",\n    ...options,\n  }).format(date)\n  const dayPeriod: string = new Intl.DateTimeFormat(\"ko-kr\", {\n    dayPeriod: \"long\",\n    ...options,\n  }).format(date)\n  const timeFormat = new Intl.DateTimeFormat(\"ko-kr\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    hour12: true,\n    ...options,\n  }).format(date)\n  const [hour, minute, sec] = timeFormat.split(\" \")[1].split(\":\")\n  const timeString: string = `${hour}시 ${minute}분`\n  return [dateString, dayPeriod, timeString].join(\"\\n\")\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\ntype CircleStyleProps = {\n  size: number\n  selected: boolean\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nconst Circle = styled.div`\n  position: absolute;\n  display: flex;\n  width: 0.75em;\n  height: 0.75em;\n  background: white;\n  border-width: 0.15rem;\n  border-style: solid;\n  border-color: ${({ selected }: CircleStyleProps) =>\n    selected ? \"black\" : \"var(--joy-palette-danger-500, #d3232f)\"};\n  border-radius: 8rem;\n  align-items: center;\n  justify-content: center;\n  scale: ${({ size }: CircleStyleProps) => size};\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${({ selected }: CircleStyleProps) =>\n      selected ? \"black\" : \"var(--joy-palette-danger-600, #a10e25)\"};\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype PointProps = {\n  id: string\n  size?: number\n  selected?: boolean\n  children?: React.ReactNode | React.ReactNode[]\n  onMouseEnter?: React.MouseEventHandler<any>\n  onMouseLeave?: React.MouseEventHandler<any>\n  onMouseDown?: React.MouseEventHandler<any>\n  onMouseUp?: React.MouseEventHandler<any>\n  onClick?: React.MouseEventHandler<any>\n}\n\nconst Point = ({\n  id,\n  size = 2,\n  selected = false,\n  children,\n  onMouseEnter,\n  onMouseDown,\n  onMouseLeave,\n  onMouseUp,\n  onClick,\n}: PointProps) => {\n  return (\n    <Container data-id={id}>\n      <Circle\n        size={size}\n        selected={selected}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      >\n        <div className=\"icon\">{children}</div>\n      </Circle>\n    </Container>\n  )\n}\n\nexport default Point\n","import React, { useCallback, useRef } from \"react\"\n\nimport GrainIcon from \"@mui/icons-material/Grain\"\nimport PolylineIcon from \"@mui/icons-material/Polyline\"\nimport OpenWithIcon from \"@mui/icons-material/OpenWith\"\nimport UploadIcon from \"@mui/icons-material/Upload\"\nimport DownloadIcon from \"@mui/icons-material/Download\"\n\nimport IconButton from \"../../../components/IconButton\"\nimport HorizontalContainer, {\n  Divider,\n} from \"../../../components/HorizontalContainer\"\n\ntype MenuButtonProps = {\n  title: string\n  active?: boolean\n  icon: React.ReactElement\n  onClick: () => void\n}\n\nconst MenuButton = ({\n  title,\n  active = false,\n  icon,\n  onClick,\n}: MenuButtonProps) => {\n  return (\n    <IconButton\n      tooltip={title}\n      tooltipColor=\"primary\"\n      tooltipPlacement=\"top\"\n      active={active}\n      variant=\"outlined\"\n      size={\"32px\"}\n      onClick={onClick}\n    >\n      {icon}\n    </IconButton>\n  )\n}\n\ntype EditorButtonsProps = {\n  editMode: string\n  onModeChanged: (mode: string) => void\n  onClickUpload: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onClickDownload: () => void\n}\n\nconst EditorButtons = ({\n  editMode,\n  onModeChanged,\n  onClickUpload,\n  onClickDownload,\n}: EditorButtonsProps): React.ReactElement => {\n  const onSelectMode = (mode: string) => {\n    onModeChanged(mode)\n  }\n\n  const ModeButtons = useCallback((): React.ReactElement => {\n    return (\n      <>\n        <MenuButton\n          title=\"점 추가/삭제\"\n          active={editMode === \"add\"}\n          icon={<GrainIcon />}\n          onClick={() => onSelectMode(\"add\")}\n        />\n        <MenuButton\n          title=\"점 연결\"\n          active={editMode === \"link\"}\n          icon={<PolylineIcon />}\n          onClick={() => onSelectMode(\"link\")}\n        />\n        <MenuButton\n          title=\"점 이동\"\n          active={editMode === \"move\"}\n          icon={<OpenWithIcon />}\n          onClick={() => onSelectMode(\"move\")}\n        />\n      </>\n    )\n  }, [editMode])\n\n  const UploadButton = useCallback((): React.ReactElement => {\n    const ref = useRef<HTMLInputElement>(null)\n    return (\n      <>\n        <label\n          htmlFor=\"upload-log\"\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <input\n            ref={ref}\n            style={{ display: \"none\" }}\n            id=\"upload-log\"\n            name=\"upload-log\"\n            type=\"file\"\n            accept=\".json,application/json\"\n            onChange={onClickUpload}\n          />\n          <MenuButton\n            title=\"업로드\"\n            icon={<UploadIcon />}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.click()\n              }\n            }}\n          />\n        </label>\n      </>\n    )\n  }, [onClickUpload])\n\n  const DownloadButton = useCallback(\n    (): React.ReactElement => (\n      <MenuButton\n        title=\"다운로드\"\n        icon={<DownloadIcon />}\n        onClick={onClickDownload}\n      />\n    ),\n    [onClickDownload]\n  )\n\n  return (\n    <>\n      <HorizontalContainer position=\"bottom\">\n        <ModeButtons />\n        <Divider />\n        <UploadButton />\n        <DownloadButton />\n      </HorizontalContainer>\n    </>\n  )\n}\n\nexport default EditorButtons\n","/* global kakao */\n\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\"\n\nimport Point from \"../../components/Point\"\nimport EditorButtons from \"./Controls/EditorButtons\"\nimport { jsonToBlob, saveFile } from \"../../helpers/fileInteracts\"\n\nimport { CustomOverlayMap, useMap, Polyline } from \"react-kakao-maps-sdk\"\n\ntype NodeType = {\n  key: string\n  lat: number\n  lng: number\n}\n\ntype EdgeType = {\n  from: string\n  to: string\n}\n\nconst saveGraphFile = (\n  nodes: Array<NodeType>,\n  edges: Array<EdgeType>\n): void => {\n  const keys: Array<string> = nodes.map(({ key }) => key)\n  const keyToIndex = (key: string): number => keys.indexOf(key)\n  const transformed = {\n    nodes: nodes.map(({ key, lat, lng }: NodeType) => ({\n      id: keyToIndex(key),\n      lat,\n      lng,\n      info: {},\n    })),\n    edges: edges.map(({ from, to }: EdgeType) => ({\n      from: keyToIndex(from),\n      to: keyToIndex(to),\n    })),\n  }\n  const filename = \"graph-\" + new Date().toISOString() + \".json\"\n  saveFile(filename, jsonToBlob(transformed))\n}\n\nconst Editor = (): React.ReactElement => {\n  const map: kakao.maps.Map = useMap()\n  const [nodes, setNodes] = useState<Array<NodeType>>([])\n  const [edges, setEdges] = useState<Array<EdgeType>>([])\n  const [level, setLevel] = useState<number>(1)\n  const [editMode, setEditMode] = useState<string>(\"add\")\n  const [selected, setSelected] = useState<Array<string>>([])\n  const [cursorPos, setCursorPos] = useState<NodeType>()\n\n  const isSelected = useCallback(\n    (id: string) => selected.indexOf(id) !== -1,\n    [selected]\n  )\n\n  const selectedNode = useMemo((): NodeType | null => {\n    const node = nodes.filter(({ key }) => isSelected(key))\n    return node.length > 0 ? node[0] : null\n  }, [nodes, isSelected])\n\n  const createEdge = (from: NodeType, to: NodeType) => {\n    setEdges((prev) =>\n      prev\n        .filter((edge) => !(edge.from == from.key && edge.to == to.key))\n        .concat({\n          from: from.key,\n          to: to.key,\n        } as EdgeType)\n    )\n  }\n\n  const getNode = useCallback(\n    (id: string): NodeType | null => {\n      const node = nodes.filter(({ key }: NodeType) => key === id)\n      return node.length > 0 ? node[0] : null\n    },\n    [nodes]\n  )\n\n  const hasNode = useCallback(\n    (id: string): boolean => getNode(id) !== null,\n    [getNode]\n  )\n\n  useEffect(() => {\n    setLevel(map.getLevel())\n  }, [map])\n\n  useEffect(() => {\n    // update edge to sync up\n    setEdges((prev) =>\n      prev.filter(({ from, to }: EdgeType) => hasNode(from) && hasNode(to))\n    )\n  }, [hasNode, setEdges])\n\n  useEffect(() => {\n    console.log(\"selected\", selected)\n    if (selected.length >= 2) {\n      const [fromID, toID] = selected\n      const [from, to] = [getNode(fromID), getNode(toID)]\n      if (from !== null && to !== null) {\n        createEdge(from, to)\n        setCursorPos(undefined)\n        setSelected([])\n      }\n      return\n    }\n  }, [selected, getNode, setCursorPos])\n\n  const onMapClick = useCallback(\n    (evt: any) => {\n      const { latLng: loc } = evt\n      if (editMode !== \"add\") {\n        return\n      }\n      const lat = loc.getLat()\n      const lng = loc.getLng()\n      setNodes((prev) => {\n        const nodeId = Math.random().toString(16).slice(2) as string\n        const node = { key: `node-${nodeId}`, lat, lng } as NodeType\n        console.log(\"add node\", node)\n        return [...prev, node]\n      })\n    },\n    [editMode]\n  )\n\n  const onMapMouseUp = useCallback((evt: any) => {}, [])\n\n  const onMapMouseMove = useCallback(\n    (evt: any) => {\n      const { latLng: loc } = evt\n      const lat = loc.getLat()\n      const lng = loc.getLng()\n      if (editMode === \"link\") {\n        setCursorPos({ key: \"cursor\", lat, lng } as NodeType)\n      } else if (editMode === \"move\") {\n        if (selected.length != 1) {\n          return\n        }\n        setNodes((prev) =>\n          prev.map((node: NodeType): NodeType => {\n            if (selected[0] !== node.key) {\n              return node\n            } else {\n              return { ...node, lat, lng }\n            }\n          })\n        )\n      }\n    },\n    [editMode, setNodes, selected, setCursorPos]\n  )\n\n  useEffect(() => {\n    map.setCursor(\"default\")\n    kakao.maps.event.addListener(map, \"click\", onMapClick)\n    kakao.maps.event.addListener(map, \"mouseup\", onMapMouseUp)\n    kakao.maps.event.addListener(map, \"mousemove\", onMapMouseMove)\n    return () => {\n      map.setCursor(\"\")\n      kakao.maps.event.removeListener(map, \"click\", onMapClick)\n      kakao.maps.event.removeListener(map, \"mouseup\", onMapMouseUp)\n      kakao.maps.event.removeListener(map, \"mousemove\", onMapMouseMove)\n    }\n  }, [map, onMapClick, onMapMouseUp, onMapMouseMove])\n\n  const onMouseDownPoint = useCallback(\n    (evt: any) => {\n      const container = evt.target.closest(\"[data-id]\") as HTMLElement\n      const id = container.getAttribute(\"data-id\") as string\n      const mouseType = evt.button as number\n      if (editMode === \"add\") {\n        if (mouseType === 2) {\n          // right button\n          setNodes((prev) => [...prev].filter(({ key }) => key !== id))\n        }\n      } else if (editMode === \"link\") {\n        if (mouseType === 0) {\n          // left button to select\n          setSelected((prev) => prev.filter((i) => i != id).concat(id))\n        } else if (mouseType === 2) {\n          // right button to unselect\n          setSelected((prev) => prev.filter((i) => i != id))\n        }\n      } else if (editMode === \"move\") {\n        if (mouseType === 0) {\n          // left button to move\n          setSelected((prev) => (prev.length > 0 ? [] : [id]))\n        }\n      }\n    },\n    [editMode, setNodes, setSelected]\n  )\n\n  const onMouseUpPoint = useCallback((evt: any) => {}, [])\n\n  const GuideLine = useCallback(\n    (): React.ReactElement => (\n      <>\n        {editMode === \"link\" && selectedNode && cursorPos && (\n          <Polyline\n            key={`edge-guide`}\n            path={[selectedNode, cursorPos].map(({ lat, lng }: NodeType) => ({\n              lat,\n              lng,\n            }))}\n            strokeWeight={3}\n            strokeColor=\"#db4040\"\n            strokeOpacity={1}\n            strokeStyle=\"dashed\"\n          />\n        )}\n      </>\n    ),\n    [editMode, selectedNode, cursorPos]\n  )\n\n  const NodePoints = useCallback(\n    (): React.ReactElement => (\n      <>\n        {nodes.map(\n          ({ key, lat, lng }: NodeType): React.ReactElement => (\n            <CustomOverlayMap\n              position={{\n                lat,\n                lng,\n              }}\n              key={key}\n            >\n              <Point\n                id={key}\n                size={6 / level}\n                selected={isSelected(key)}\n                onMouseDown={onMouseDownPoint}\n                onMouseUp={onMouseUpPoint}\n              />\n            </CustomOverlayMap>\n          )\n        )}\n      </>\n    ),\n    [nodes, level, isSelected, onMouseDownPoint, onMouseUpPoint]\n  )\n\n  const EdgeLines = useCallback(\n    (): React.ReactElement => (\n      <>\n        {edges.map(({ from, to }: EdgeType): React.ReactElement => {\n          const path: Array<any> = [from, to]\n            .map(getNode)\n            .filter((n) => n !== null)\n          if (path.length != 2) {\n            return <></>\n          }\n          return (\n            <Polyline\n              key={`edge-${from}-${to}`}\n              path={path.map(({ lat, lng }: NodeType) => ({\n                lat,\n                lng,\n              }))}\n              strokeWeight={3}\n              strokeColor=\"#db4040\"\n              strokeOpacity={1}\n              strokeStyle=\"solid\"\n              onCreate={console.log}\n            />\n          )\n        })}\n      </>\n    ),\n    [edges, getNode]\n  )\n\n  const fitMapBound = useCallback(\n    (nodes: NodeType[]) => {\n      if (nodes.length < 1) return\n      const bounds = new kakao.maps.LatLngBounds()\n      nodes.forEach(({ lat, lng }) => {\n        bounds.extend(new kakao.maps.LatLng(lat, lng))\n      })\n      map.setBounds(bounds)\n    },\n    [map]\n  )\n\n  const loadGraphFromFile = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const files = evt.target.files\n      if (!files || files.length < 1) {\n        return\n      }\n      const file = files[0]\n      const reader: FileReader = new FileReader()\n      reader.addEventListener(\"load\", (event: any) => {\n        const result = event.target.result\n        try {\n          const { nodes, edges } = JSON.parse(result)\n          const newNodes: Array<NodeType> = nodes.map(\n            ({ id, lat, lng }: any) =>\n              ({\n                key: `node-${id}`,\n                lat,\n                lng,\n              } as NodeType)\n          )\n          setNodes(newNodes)\n          setEdges(\n            edges.map(\n              ({ from, to }: any) =>\n                ({\n                  from: (newNodes[from] as NodeType).key,\n                  to: (newNodes[to] as NodeType).key,\n                } as EdgeType)\n            )\n          )\n          fitMapBound(nodes)\n          console.log(nodes, edges)\n        } catch {\n          window.alert(\"Failed to parse JSON\")\n        }\n      })\n      reader.readAsText(file)\n    },\n    [setNodes, setEdges]\n  )\n\n  const downloadGraphToFile = useCallback(\n    () => saveGraphFile(nodes, edges),\n    [nodes, edges]\n  )\n\n  return (\n    <>\n      <EdgeLines />\n      <GuideLine />\n      <NodePoints />\n      <EditorButtons\n        editMode={editMode || \"add\"}\n        onClickDownload={downloadGraphToFile}\n        onClickUpload={loadGraphFromFile}\n        onModeChanged={setEditMode}\n      />\n    </>\n  )\n}\n\nexport default Editor\n","export const saveFile = (filename: string, blob: Blob) => {\n  const a = document.createElement(\"a\")\n  a.download = filename\n  a.href = URL.createObjectURL(blob)\n  a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\")\n  a.addEventListener(\"click\", (e) => {\n    setTimeout(() => URL.revokeObjectURL(a.href), 30 * 1000)\n  })\n  a.click()\n}\n\nexport const jsonToBlob = (json: object): Blob =>\n  new Blob([JSON.stringify(json, null, 2)], {\n    type: \"application/json\",\n  })\n","import React, { createContext, useState, useContext } from \"react\"\n\nexport interface ContextState<T> {\n  state: T\n  setState: React.Dispatch<React.SetStateAction<ControlState>>\n}\n\nexport interface ControlState {\n  mode: \"view\" | \"edit\"\n  viewSpeed?: number\n  viewRunning?: boolean\n}\n\nconst initialState: ControlState = {\n  mode: \"view\",\n  viewSpeed: 1.0,\n  viewRunning: false,\n}\n\nconst Context: any = createContext<ContextState<ControlState> | undefined>(\n  undefined\n)\n\nexport const ControlProvider = (props: any) => {\n  const [state, setState] = useState<ControlState>(initialState)\n\n  // const setContext = (state: ControlState) => {\n  //   setState((prevState: ControlState) => ({ ...prevState, ...state }))\n  // }\n\n  return (\n    <Context.Provider value={{ state: { ...state }, setState }}>\n      <>{props.children}</>\n    </Context.Provider>\n  )\n}\n\nexport const useControlState = (): [\n  ControlState,\n  React.Dispatch<React.SetStateAction<ControlState>>\n] => {\n  const ctx: ContextState<ControlState> | undefined = useContext(Context)\n  if (ctx === undefined) {\n    throw new Error(\"useControlState should be used within ControlProvider\")\n  }\n  const { state, setState } = ctx\n  return [\n    state as ControlState,\n    setState as React.Dispatch<React.SetStateAction<ControlState>>,\n  ]\n}\n","import React, { useState, useCallback } from \"react\"\n\nimport KakaoMap from \"../../components/KakaoMap\"\nimport HorizontalContainer from \"../../components/HorizontalContainer\"\nimport { Button } from \"@mui/joy\"\nimport Viewer from \"./Viewer\"\nimport Editor from \"./Editor\"\nimport CableIcon from \"@mui/icons-material/Cable\"\nimport LocalTaxiIcon from \"@mui/icons-material/LocalTaxi\"\nimport { useControlState, ControlState } from \"../../providers/ControlProvider\"\n\nimport \"./index.css\"\n\ntype SwitchButtonProps = React.PropsWithChildren & {\n  mode: \"view\" | \"edit\"\n  onChange: (mode: string) => void\n}\n\nconst SwitchButton = ({\n  mode,\n  onChange,\n}: SwitchButtonProps): React.ReactElement => (\n  <>\n    <Button\n      size=\"sm\"\n      startDecorator={<LocalTaxiIcon />}\n      variant={mode === \"view\" ? \"solid\" : \"plain\"}\n      onClick={() => onChange(\"view\")}\n      sx={{\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n      }}\n    >\n      Viewer\n    </Button>\n    <Button\n      size=\"sm\"\n      startDecorator={<CableIcon />}\n      variant={mode === \"edit\" ? \"solid\" : \"plain\"}\n      onClick={() => onChange(\"edit\")}\n      sx={{\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n      }}\n    >\n      Editor\n    </Button>\n  </>\n)\n\nexport default function Map() {\n  const [controls, setControls] = useControlState()\n\n  const latitude = 37.52897\n  const longitude = 126.917101\n  const [level, setLevel] = useState<number>(3)\n\n  const SwitchButtonControlled = useCallback(\n    (): React.ReactElement => (\n      <HorizontalContainer\n        position=\"top\"\n        gap={0}\n        style={{\n          padding: 0,\n          height: \"auto\",\n        }}\n      >\n        <SwitchButton\n          mode={controls.mode}\n          onChange={(mode: string) => {\n            setControls((prev) => ({ ...prev, mode } as ControlState))\n          }}\n        />\n      </HorizontalContainer>\n    ),\n    [(controls as ControlState).mode, setControls]\n  )\n\n  return (\n    <>\n      <KakaoMap\n        center={{\n          lat: latitude,\n          lng: longitude,\n        }}\n        level={level}\n        onZoomChanged={(map) => setLevel(map.getLevel())}\n        style={{\n          width: \"100%\",\n          height: \"100vh\",\n          zIndex: 0,\n        }}\n      >\n        <SwitchButtonControlled />\n        {controls.mode == \"view\" ? <Viewer /> : <Editor />}\n      </KakaoMap>\n    </>\n  )\n}\n","import React from \"react\"\nimport Map from \"./Map\"\nimport { ControlProvider } from \"../providers/ControlProvider\"\nimport { StatusProvider } from \"../providers/StatusProvider\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StatusProvider>\n        <ControlProvider>\n          <Map />\n        </ControlProvider>\n      </StatusProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom/client\"\nimport \"./index.css\"\nimport App from \"./pages/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement)\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}